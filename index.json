{
  "CHANGELOG.html": {
    "href": "CHANGELOG.html",
    "title": "Changelog | ConfigurableWarning Docs",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. [v1.15.2] - 2024-09-06 Changed Updated docs Corrected namespace [v1.15.1] - 2024-09-06 Changed Updated readme [v1.15.0] - 2024-09-06 Added The entire ContentSettings API! (This is the continuation) [v1.14.0] - 2024-05-18 Added New settings DSL! Other mods compat! Better organization! Annotations! Much more that I forgor! [v1.13.2] - 2024-05-09 Added New Developer API (ConfigurableWarning.API) Added documentation built with DocFX Added CI for docs Added new days-per-quota patch Added new state cache Added new option loader Added [RegisterOption] annotation Added clamp toggles (via a patch to Zorro.Settings and ContentSettings) Added BoolOption, FloatOption, IntOption, and TextOption Added documentation comments to all API classes Changed Updated README Migrated existing settings to the new API Migrated patches to the new API Reorganized project Switched to Cake (Frosting) for builds Switched to Thunderstore CLI/Cake for packaging Switched mostly to Rider (for development) Moved the syncer from the Plugin class to an instance of OptionSyncer Improved code structure Moved namespaces to the top instead of a block Removed Removed old (legacy) package script Removed old days-per-quota patch [v1.12.0] - 2024-05-05 Added Added diving bell settings Changed Updated sync [v1.11.0] - 2024-05-02 Added Added depdendencies Changed Fixed settings sync (again) Made UI elements not borked Redid settings packing Fixed for CW's new May 2nd release [v1.10.2] - 2024-05-01 Changed Hopefully fix settings sync [v1.10.1] - 2024-05-01 Changed Actually fixed the build [v1.10.0] - 2024-04-29 Changed Updated settings UI to be cleaner Switched fully to Mycelium Networking Cached settings values Building in release mode! (Yes, I wasn't before.) Removed BepInEx config because it kinda broke stuff [v1.9.2] - 2024-04-19 Changed Fixed settings sync [v1.9.1] - 2024-04-18 Changed Nothing, just updated the README. :) [v1.9.0] - 2024-04-18 Changed Refactored UI Moved to using ContentSettings and MyceliumNetworking [v1.8.1] - 2024-04-12 Changed Fixed a default config value Hopefully fix the lobby patch [v1.8.0] - 2024-04-12 Changed Fixed health & days left HUD to actually reflect the correct value (in real time) [v1.7.1] - 2024-04-12 Changed Fixed lobby stuff (I actually applied the patch this time!) Fixed patches not using nameof [v1.7.0] - 2024-04-12 Added Modified ContentSettings API is now built-in Settings patch TextSetting and TextSettingsUI for blank \"settings\" (basically a label/divider) Common*Setting classes for ease Basic register & setup function for settings (DX stuff) Changed Reorganized settings to make it easier to work with Fixed a few issues Made the patches better We no longer rely on ContentSettings! [v1.6.0] - 2024-04-11 Added Added oxygen refill-related settings Added private lobbies patch & config Changed Changed the sprint multiplier max from 4 to 10 [v1.5.0] - 2024-04-11 Changed Moved to weird(-er) patching methods instead of overwriting methods for maximum compatibility (pretend that had echo in it) Removed redundant stuff Made config sync hopefully better Hopefully didn't break anything üôè"
  },
  "api/ConfigurableWarning.API.Attributes.CompatGroup.html": {
    "href": "api/ConfigurableWarning.API.Attributes.CompatGroup.html",
    "title": "Class CompatGroup | ConfigurableWarning Docs",
    "keywords": "Class CompatGroup Namespace ConfigurableWarning.API.Attributes Assembly RedstoneWizard08.ConfigurableWarning.dll Registers any contained options as a part of this category. This is specifically for compat modules. [MeansImplicitUse] [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class CompatGroup : Attribute Inheritance object Attribute CompatGroup Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CompatGroup(string) Registers any contained options as a part of this category. This is specifically for compat modules. public CompatGroup(string category) Parameters category string The category to register to. CompatGroup(string, string) Registers any contained options as a part of this category, overriding the parent's tab. This is specifically for compat modules. public CompatGroup(string tab, string category) Parameters tab string The tab category string The category Fields Category The category. public readonly string Category Field Value string Tab The tab. If this is null, it will default to the parent's tab. public readonly string? Tab Field Value string"
  },
  "api/ConfigurableWarning.API.Attributes.CompatTab.html": {
    "href": "api/ConfigurableWarning.API.Attributes.CompatTab.html",
    "title": "Class CompatTab | ConfigurableWarning Docs",
    "keywords": "Class CompatTab Namespace ConfigurableWarning.API.Attributes Assembly RedstoneWizard08.ConfigurableWarning.dll Registers any contained groups as a part of this tab. This is specifically for compat modules. [MeansImplicitUse] [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class CompatTab : Attribute Inheritance object Attribute CompatTab Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CompatTab(string) Registers any contained groups as a part of this tab. This is specifically for compat modules. public CompatTab(string tab) Parameters tab string Fields Name The tab. public readonly string? Name Field Value string"
  },
  "api/ConfigurableWarning.API.Attributes.Group.html": {
    "href": "api/ConfigurableWarning.API.Attributes.Group.html",
    "title": "Class Group | ConfigurableWarning Docs",
    "keywords": "Class Group Namespace ConfigurableWarning.API.Attributes Assembly RedstoneWizard08.ConfigurableWarning.dll Registers any contained options as a part of this category. [MeansImplicitUse] [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class Group : Attribute Inheritance object Attribute Group Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Group(string) Registers any contained options as a part of this category. public Group(string category) Parameters category string The category to register to. Group(string, string) Registers any contained options as a part of this category, overriding the parent's tab. public Group(string tab, string category) Parameters tab string The tab category string The category Fields Category The category. public readonly string Category Field Value string Tab The tab. If this is null, it will default to the parent's tab. public readonly string? Tab Field Value string"
  },
  "api/ConfigurableWarning.API.Attributes.Register.html": {
    "href": "api/ConfigurableWarning.API.Attributes.Register.html",
    "title": "Class Register | ConfigurableWarning Docs",
    "keywords": "Class Register Namespace ConfigurableWarning.API.Attributes Assembly RedstoneWizard08.ConfigurableWarning.dll Automatically registers the option. This will initialize it in the state, register it with Content Settings, and load its default value if the value is not present. [MeansImplicitUse] [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class Register : Attribute Inheritance object Attribute Register Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/ConfigurableWarning.API.Attributes.Tab.html": {
    "href": "api/ConfigurableWarning.API.Attributes.Tab.html",
    "title": "Class Tab | ConfigurableWarning Docs",
    "keywords": "Class Tab Namespace ConfigurableWarning.API.Attributes Assembly RedstoneWizard08.ConfigurableWarning.dll Registers any contained groups as a part of this tab. [MeansImplicitUse] [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class Tab : Attribute Inheritance object Attribute Tab Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Tab(string) Registers any contained groups as a part of this tab. public Tab(string tab) Parameters tab string The tab. Fields Name The tab. public readonly string? Name Field Value string"
  },
  "api/ConfigurableWarning.API.Attributes.html": {
    "href": "api/ConfigurableWarning.API.Attributes.html",
    "title": "Namespace ConfigurableWarning.API.Attributes | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning.API.Attributes Classes CompatGroup Registers any contained options as a part of this category. This is specifically for compat modules. CompatTab Registers any contained groups as a part of this tab. This is specifically for compat modules. Group Registers any contained options as a part of this category. Register Automatically registers the option. This will initialize it in the state, register it with Content Settings, and load its default value if the value is not present. Tab Registers any contained groups as a part of this tab."
  },
  "api/ConfigurableWarning.API.Compat.CompatLoader.html": {
    "href": "api/ConfigurableWarning.API.Compat.CompatLoader.html",
    "title": "Class CompatLoader | ConfigurableWarning Docs",
    "keywords": "Class CompatLoader Namespace ConfigurableWarning.API.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll A loader for compat modules. public static class CompatLoader Inheritance object CompatLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RegisteredGroups A list of all registered compat groups. public static readonly Dictionary<Type, CompatGroup> RegisteredGroups Field Value Dictionary<Type, CompatGroup> RegisteredModules A list of all registered compat modules. public static readonly Dictionary<Type, ICompatModule> RegisteredModules Field Value Dictionary<Type, ICompatModule> RegisteredTabs A list of all registered compat tabs. public static readonly Dictionary<Type, CompatTab> RegisteredTabs Field Value Dictionary<Type, CompatTab> Methods LoadModules() Auto-loads all compat modules. public static void LoadModules() NamespaceExists(string) Checks if a namespace exists. public static bool NamespaceExists(string ns) Parameters ns string The namespace. Returns bool If it exists. TryRegisterCompatGroup(string?, Type) Try to register a compat group from a type. public static bool TryRegisterCompatGroup(string? tab, Type type) Parameters tab string The tab type Type The type Returns bool If it could be registered TryRegisterCompatTab(Type) Try to register a compat tab from a type. public static bool TryRegisterCompatTab(Type type) Parameters type Type The type Returns bool If it could be registered"
  },
  "api/ConfigurableWarning.API.Compat.CompatModule.html": {
    "href": "api/ConfigurableWarning.API.Compat.CompatModule.html",
    "title": "Class CompatModule | ConfigurableWarning Docs",
    "keywords": "Class CompatModule Namespace ConfigurableWarning.API.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Declare a compat module. [MeansImplicitUse] [AttributeUsage(AttributeTargets.Class, Inherited = false)] public sealed class CompatModule : Attribute Inheritance object Attribute CompatModule Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CompatModule(string[]) Declare a compat module. public CompatModule(string[] dependencies) Parameters dependencies string[] A list of namespaces this module depends on. Fields Dependencies A list of namespaces this module depends on. public readonly string[] Dependencies Field Value string[]"
  },
  "api/ConfigurableWarning.API.Compat.ICompatModule.html": {
    "href": "api/ConfigurableWarning.API.Compat.ICompatModule.html",
    "title": "Interface ICompatModule | ConfigurableWarning Docs",
    "keywords": "Interface ICompatModule Namespace ConfigurableWarning.API.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll A compat module. public interface ICompatModule Methods Init() Initialize the compat module void Init()"
  },
  "api/ConfigurableWarning.API.Compat.html": {
    "href": "api/ConfigurableWarning.API.Compat.html",
    "title": "Namespace ConfigurableWarning.API.Compat | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning.API.Compat Classes CompatLoader A loader for compat modules. CompatModule Declare a compat module. Interfaces ICompatModule A compat module."
  },
  "api/ConfigurableWarning.API.ConfigurableWarningAPI.html": {
    "href": "api/ConfigurableWarning.API.ConfigurableWarningAPI.html",
    "title": "Class ConfigurableWarningAPI | ConfigurableWarning Docs",
    "keywords": "Class ConfigurableWarningAPI Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll ConfigurableWarning's main API entrypoint. public static class ConfigurableWarningAPI Inheritance object ConfigurableWarningAPI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Sync The global instance of OptionSyncer. public static OptionSyncer Sync { get; } Property Value OptionSyncer"
  },
  "api/ConfigurableWarning.API.EnumStateHolder.html": {
    "href": "api/ConfigurableWarning.API.EnumStateHolder.html",
    "title": "Class EnumStateHolder | ConfigurableWarning Docs",
    "keywords": "Class EnumStateHolder Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll A state holder for EnumOptions. public sealed class EnumStateHolder Inheritance object EnumStateHolder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods Get<T>(string) Get an option's state. public T? Get<T>(string name) Parameters name string The option. Returns T Its state. Type Parameters T Set<T>(string, T) Set an option's state. public void Set<T>(string name, T value) Parameters name string The option. value T The new state. Type Parameters T"
  },
  "api/ConfigurableWarning.API.EnumUtil.html": {
    "href": "api/ConfigurableWarning.API.EnumUtil.html",
    "title": "Class EnumUtil | ConfigurableWarning Docs",
    "keywords": "Class EnumUtil Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll public static class EnumUtil Inheritance object EnumUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetIndex<T>(T) public static int GetIndex<T>(T value) where T : struct Parameters value T Returns int Type Parameters T GetOptions<T>() public static string[] GetOptions<T>() where T : struct Returns string[] Type Parameters T Parse<T>(string) public static T Parse<T>(string value) where T : struct Parameters value string Returns T Type Parameters T"
  },
  "api/ConfigurableWarning.API.OptionExt.html": {
    "href": "api/ConfigurableWarning.API.OptionExt.html",
    "title": "Class OptionExt | ConfigurableWarning Docs",
    "keywords": "Class OptionExt Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll Extension Methods. public static class OptionExt Inheritance object OptionExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BoolOpt(string) Convert this string into an option. public static BoolOption? BoolOpt(this string name) Parameters name string The string. Returns BoolOption The option. BoolState(string) Converts this string into an option and gets its state. public static bool BoolState(this string opt) Parameters opt string The string. Returns bool The state. EnumOpt<T>(string) Convert this string into an option. public static EnumOption<T>? EnumOpt<T>(this string name) where T : struct Parameters name string The string. Returns EnumOption<T> The option. Type Parameters T EnumState<T>(string) Converts this string into an option and gets its state. public static T? EnumState<T>(this string opt) where T : struct Parameters opt string The string. Returns T? The state. Type Parameters T FloatOpt(string) Convert this string into an option. public static FloatOption? FloatOpt(this string name) Parameters name string The string. Returns FloatOption The option. FloatState(string) Converts this string into an option and gets its state. public static float? FloatState(this string opt) Parameters opt string The string. Returns float? The state. IntOpt(string) Convert this string into an option. public static IntOption? IntOpt(this string name) Parameters name string The string. Returns IntOption The option. IntState(string) Converts this string into an option and gets its state. public static int? IntState(this string opt) Parameters opt string The string. Returns int? The state. TextOpt(string) Convert this string into an option. public static TextOption? TextOpt(this string name) Parameters name string The string. Returns TextOption The option. TextState(string) Converts this string into an option and gets its state. public static string? TextState(this string opt) Parameters opt string The string. Returns string The state."
  },
  "api/ConfigurableWarning.API.OptionLoader.html": {
    "href": "api/ConfigurableWarning.API.OptionLoader.html",
    "title": "Class OptionLoader | ConfigurableWarning Docs",
    "keywords": "Class OptionLoader Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll Responsible for loading, holding, and registering options. public static class OptionLoader Inheritance object OptionLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RegisteredGroups A list of all registered groups. public static readonly Dictionary<Type, Group> RegisteredGroups Field Value Dictionary<Type, Group> RegisteredOptions A list of all registered options. public static readonly Dictionary<Type, IUntypedOption> RegisteredOptions Field Value Dictionary<Type, IUntypedOption> RegisteredTabs A list of all registered tabs. public static readonly Dictionary<Type, Tab> RegisteredTabs Field Value Dictionary<Type, Tab> Methods RegisterOptions() Automatically collect and register all options annotated with Register. public static void RegisterOptions() TryRegisterGroup(string?, Type) Try to register a group from a type. public static bool TryRegisterGroup(string? tab, Type type) Parameters tab string The tab type Type The type Returns bool If it could be registered TryRegisterSetting(string, string, Type) Try to register a setting from a type. public static bool TryRegisterSetting(string tab, string group, Type type) Parameters tab string The tab group string The group type Type The type Returns bool If it could be registered TryRegisterTab(Type) Try to register a tab from a type. public static bool TryRegisterTab(Type type) Parameters type Type The type Returns bool If it could be registered"
  },
  "api/ConfigurableWarning.API.OptionManager.html": {
    "href": "api/ConfigurableWarning.API.OptionManager.html",
    "title": "Class OptionManager | ConfigurableWarning Docs",
    "keywords": "Class OptionManager Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll Manages options' loading, saving, registration, and accessing. public class OptionManager Inheritance object OptionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance The current instance of this OptionManager. public static OptionManager Instance { get; } Property Value OptionManager SaveLoader The internally used instance of the DefaultSettingsSaveLoad. public static DefaultSettingsSaveLoad SaveLoader { get; } Property Value DefaultSettingsSaveLoad Methods Get(string) Gets an option by its name. public IUntypedOption? Get(string name) Parameters name string The option's name. Returns IUntypedOption The untyped form of the option. Get<T>(string) Gets a typed option by its name. public IOption<T>? Get<T>(string name) Parameters name string The option's name. Returns IOption<T> The option. Type Parameters T The option's type. Register(IUntypedOption) Registers an untyped option, initializing and setting it up. public void Register(IUntypedOption opt) Parameters opt IUntypedOption The option to register. Register<T>(IOption<T>) Registers a typed option, initializing and setting it up. This will convert it to a IUntypedOption. public void Register<T>(IOption<T> opt) Parameters opt IOption<T> The option to register. Type Parameters T The option's value type."
  },
  "api/ConfigurableWarning.API.OptionSyncer.html": {
    "href": "api/ConfigurableWarning.API.OptionSyncer.html",
    "title": "Class OptionSyncer | ConfigurableWarning Docs",
    "keywords": "Class OptionSyncer Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll Handles syncing all the options in OptionsState using the MyceliumNetworking.MyceliumNetwork API. public class OptionSyncer Inheritance object OptionSyncer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ResetCache() Resets cached values to force a re-sync. public void ResetCache() SyncSettings() Send the data to all connected clients and sync current values in the OptionsState. public void SyncSettings() SyncSettingsRecv(string) The receiving end of the sync RPC. Applies new values when called. [CustomRPC] public void SyncSettingsRecv(string data) Parameters data string The JSON-encoded data string."
  },
  "api/ConfigurableWarning.API.Options.BoolOption.html": {
    "href": "api/ConfigurableWarning.API.Options.BoolOption.html",
    "title": "Class BoolOption | ConfigurableWarning Docs",
    "keywords": "Class BoolOption Namespace ConfigurableWarning.API.Options Assembly RedstoneWizard08.ConfigurableWarning.dll A boolean option. This must be inherited from to use. Its state is stored in the OptionsState class. public class BoolOption : BoolSetting, IDisposable, IOption<bool>, ICustomSetting, IExposedSetting, IUntypedOption Inheritance object Setting BoolSetting BoolOption Implements IDisposable IOption<bool> ICustomSetting IExposedSetting IUntypedOption Inherited Members BoolSetting.Value BoolSetting.Load(ISettingsSaveLoad) BoolSetting.Save(ISettingsSaveLoad) BoolSetting.SetValue(bool, ISettingHandler) BoolSetting.GetSettingUICell() BoolSetting.GetDebugUI(ISettingHandler) BoolSetting.Expose(bool) Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BoolOption(string, bool, string) Initialize a IOption<T> with the bool type. protected BoolOption(string name, bool defaultValue, string displayName) Parameters name string The option's name. defaultValue bool The default value. displayName string The option's displayed name. BoolOption(string, bool, string, Action<BoolOption>[]) Initialize a IOption<T> with the bool type. protected BoolOption(string name, bool defaultValue, string displayName, Action<BoolOption>[] actions) Parameters name string The option's name. defaultValue bool The default value. displayName string The option's displayed name. actions Action<BoolOption>[] Functions to run when the value is applied. Properties State Get or set this option's state. public bool State { get; set; } Property Value bool Methods ApplyValue() Applies the value. This is run when the user changes the value. This will sync it, update the state, and run any apply actions. public override void ApplyValue() AsOption() Get this as an IOption<T>. This is used for accessing default methods. public IOption<bool> AsOption() Returns IOption<bool> This as an IOption<T>. AsUntyped() Get this option as an IUntypedOption public IUntypedOption AsUntyped() Returns IUntypedOption The IUntypedOption form of this. GetDefaultValue() Get this option's default value. public override bool GetDefaultValue() Returns bool The option's default value. GetDisplayName() Get the display name of this option. public string GetDisplayName() Returns string The option's display name. GetName() Gets this option's name. This is its name in the registry and in the state holder. public string GetName() Returns string The option's name. GetValue() Gets the current value of the option. WARNING! THIS MAY NOT ALWAYS BE CORRECT! USE THE STATE HOLDER INSTEAD! public bool GetValue() Returns bool The (potential) value of this option. Instance(string) Get an instance of an option. public static BoolOption? Instance(string name) Parameters name string The option's name. Returns BoolOption The option. RegisterSetting(string, string) Registers this setting with Content Settings. You probably want to use Register(string, string) instead. public void RegisterSetting(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. SetValue(bool) Sets the option's value. This will NOT update it in the state! public void SetValue(bool value) Parameters value bool The new value. SetValue(object) Sets the option's value. This will NOT update it in the state! public void SetValue(object value) Parameters value object The new value."
  },
  "api/ConfigurableWarning.API.Options.EnumOption-1.html": {
    "href": "api/ConfigurableWarning.API.Options.EnumOption-1.html",
    "title": "Class EnumOption<T> | ConfigurableWarning Docs",
    "keywords": "Class EnumOption<T> Namespace ConfigurableWarning.API.Options Assembly RedstoneWizard08.ConfigurableWarning.dll An enum option. This must be inherited from to use. Its state is stored in the OptionsState class. public class EnumOption<T> : EnumSetting, IDisposable, IOption<T>, ICustomSetting, IExposedSetting, IUntypedOption where T : struct Type Parameters T Inheritance object Setting IntSetting EnumSetting EnumOption<T> Implements IDisposable IOption<T> ICustomSetting IExposedSetting IUntypedOption Inherited Members EnumSetting.GetDebugUI(ISettingHandler) EnumSetting.GetSettingUICell() IntSetting.Load(ISettingsSaveLoad) IntSetting.Save(ISettingsSaveLoad) IntSetting.SetValue(int, ISettingHandler) IntSetting.Value Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnumOption(string, T, string) Initialize a IOption<T> with the T type. protected EnumOption(string name, T defaultValue, string displayName) Parameters name string The option's name. defaultValue T The default value. displayName string The option's displayed name. EnumOption(string, T, string, Action<EnumOption<T>>[]) Initialize a IOption<T> with the T type. protected EnumOption(string name, T defaultValue, string displayName, Action<EnumOption<T>>[] actions) Parameters name string The option's name. defaultValue T The default value. displayName string The option's displayed name. actions Action<EnumOption<T>>[] Functions to run when the value is applied. Properties State Get or set this option's state. public T State { get; set; } Property Value T WrappedValue The wrapped (string) value of this option. public string WrappedValue { get; set; } Property Value string Methods ApplyValue() Applies the value. This is run when the user changes the value. This will sync it, update the state, and run any apply actions. public override void ApplyValue() AsOption() Get this as an IOption<T>. This is used for accessing default methods. public IOption<T> AsOption() Returns IOption<T> This as an IOption<T>. AsUntyped() Get this option as an IUntypedOption public IUntypedOption AsUntyped() Returns IUntypedOption The IUntypedOption form of this. GetChoices() Get the choices for this option. public override List<string> GetChoices() Returns List<string> A list of choices GetDefaultValue() public override int GetDefaultValue() Returns int GetDisplayName() Get the display name of this option. public string GetDisplayName() Returns string The option's display name. GetName() Gets this option's name. This is its name in the registry and in the state holder. public string GetName() Returns string The option's name. GetValue() Gets the current value of the option. WARNING! THIS MAY NOT ALWAYS BE CORRECT! USE THE STATE HOLDER INSTEAD! public T GetValue() Returns T The (potential) value of this option. Instance(string) Get an instance of an option. public static EnumOption<T>? Instance(string name) Parameters name string The option's name. Returns EnumOption<T> The option. RegisterSetting(string, string) Registers this setting with Content Settings. You probably want to use Register(string, string) instead. public void RegisterSetting(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. SetValue(object) Sets the option's value. This will NOT update it in the state! public void SetValue(object value) Parameters value object The new value. SetValue(T) Sets the option's value. This will NOT update it in the state! public void SetValue(T value) Parameters value T The new value."
  },
  "api/ConfigurableWarning.API.Options.FloatOption.html": {
    "href": "api/ConfigurableWarning.API.Options.FloatOption.html",
    "title": "Class FloatOption | ConfigurableWarning Docs",
    "keywords": "Class FloatOption Namespace ConfigurableWarning.API.Options Assembly RedstoneWizard08.ConfigurableWarning.dll A float option. This must be inherited from to use. Its state is stored in the OptionsState class. public class FloatOption : FloatSetting, IDisposable, IOption<float>, ICustomSetting, IExposedSetting, IUntypedOption Inheritance object Setting FloatSetting FloatOption Implements IDisposable IOption<float> ICustomSetting IExposedSetting IUntypedOption Inherited Members FloatSetting.Load(ISettingsSaveLoad) FloatSetting.Save(ISettingsSaveLoad) FloatSetting.GetDebugUI(ISettingHandler) FloatSetting.GetSettingUICell() FloatSetting.SetValue(float, ISettingHandler) FloatSetting.Clamp(float) FloatSetting.Expose(float) FloatSetting.Value FloatSetting.MinValue FloatSetting.MaxValue Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FloatOption(string, float, string, float, float, Action<FloatOption>[], bool) Initialize a IOption<T> with the float type. protected FloatOption(string name, float defaultValue, string displayName, float min, float max, Action<FloatOption>[] actions, bool doClamp = true) Parameters name string The option's name. defaultValue float The default value. displayName string The option's displayed name. min float The minimum value. max float The maximum value. actions Action<FloatOption>[] Functions to run when the value is applied. doClamp bool Whether to clamp the value when changed. FloatOption(string, float, string, float, float, bool) Initialize a IOption<T> with the float type. protected FloatOption(string name, float defaultValue, string displayName, float min, float max, bool doClamp = true) Parameters name string The option's name. defaultValue float The default value. displayName string The option's displayed name. min float The minimum value. max float The maximum value. doClamp bool Whether to clamp the value when changed. Properties State Get or set this option's state. public float State { get; set; } Property Value float Methods ApplyValue() Applies the value. This is run when the user changes the value. This will sync it, update the state, and run any apply actions. public override void ApplyValue() AsOption() Get this as an IOption<T>. This is used for accessing default methods. public IOption<float> AsOption() Returns IOption<float> This as an IOption<T>. AsUntyped() Get this option as an IUntypedOption public IUntypedOption AsUntyped() Returns IUntypedOption The IUntypedOption form of this. GetDefaultValue() Get this option's default value. public override float GetDefaultValue() Returns float The option's default value. GetDisplayName() Get the display name of this option. public string GetDisplayName() Returns string The option's display name. GetMinMaxValue() public override float2 GetMinMaxValue() Returns float2 GetName() Gets this option's name. This is its name in the registry and in the state holder. public string GetName() Returns string The option's name. GetValue() Gets the current value of the option. WARNING! THIS MAY NOT ALWAYS BE CORRECT! USE THE STATE HOLDER INSTEAD! public float GetValue() Returns float The (potential) value of this option. Instance(string) Get an instance of an option. public static FloatOption? Instance(string name) Parameters name string The option's name. Returns FloatOption The option. RegisterSetting(string, string) Registers this setting with Content Settings. You probably want to use Register(string, string) instead. public void RegisterSetting(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. SetValue(object) Sets the option's value. This will NOT update it in the state! public void SetValue(object value) Parameters value object The new value. SetValue(float) Sets the option's value. This will NOT update it in the state! public void SetValue(float value) Parameters value float The new value."
  },
  "api/ConfigurableWarning.API.Options.IOption-1.html": {
    "href": "api/ConfigurableWarning.API.Options.IOption-1.html",
    "title": "Interface IOption<T> | ConfigurableWarning Docs",
    "keywords": "Interface IOption<T> Namespace ConfigurableWarning.API.Options Assembly RedstoneWizard08.ConfigurableWarning.dll Represents an option. This interface is implemented by all options. public interface IOption<T> : ICustomSetting, IExposedSetting, IUntypedOption Type Parameters T The option's value type. Inherited Members IExposedSetting.GetSettingCategory() IUntypedOption.SetValue(object) Properties State Get or set this option's state. T? State { get; set; } Property Value T Methods AsOption() Get this as an IOption<T>. This is used for accessing default methods. IOption<T> AsOption() Returns IOption<T> This as an IOption<T>. AsUntyped() Get this option as an IUntypedOption IUntypedOption AsUntyped() Returns IUntypedOption The IUntypedOption form of this. GetDefaultValue() Get this option's default value. T GetDefaultValue() Returns T The option's default value. GetDisplayName() Get the display name of this option. string GetDisplayName() Returns string The option's display name. GetName() Gets this option's name. This is its name in the registry and in the state holder. string GetName() Returns string The option's name. GetValue() Gets the current value of the option. WARNING! THIS MAY NOT ALWAYS BE CORRECT! USE THE STATE HOLDER INSTEAD! T GetValue() Returns T The (potential) value of this option. Instance(string) Get an instance of an option. public static IOption<T>? Instance(string name) Parameters name string The option's name. Returns IOption<T> The option. Register(string, string) Registers this option to Content Settings, sets up its state, and registers it to the OptionManager. void Register(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. RegisterSetting(string, string) Registers this setting with Content Settings. You probably want to use Register(string, string) instead. void RegisterSetting(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. SetValue(T) Sets the option's value. This will NOT update it in the state! void SetValue(T value) Parameters value T The new value."
  },
  "api/ConfigurableWarning.API.Options.IUntypedOption.html": {
    "href": "api/ConfigurableWarning.API.Options.IUntypedOption.html",
    "title": "Interface IUntypedOption | ConfigurableWarning Docs",
    "keywords": "Interface IUntypedOption Namespace ConfigurableWarning.API.Options Assembly RedstoneWizard08.ConfigurableWarning.dll A simplified version of IOption<T> that has no type argument, and uses objects instead (with casts). public interface IUntypedOption Methods GetName() Gets this option's name. This is its name in the registry and in the state holder. string GetName() Returns string The option's name. GetValue() Gets the current value of the option. WARNING! THIS MAY NOT ALWAYS BE CORRECT! USE THE STATE HOLDER INSTEAD! object GetValue() Returns object The (potential) value of this option. Register(string, string) Registers this option to Content Settings, sets up its state, and registers it to the OptionManager. void Register(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. SetValue(object) Sets the option's value. This will NOT update it in the state! void SetValue(object value) Parameters value object The new value."
  },
  "api/ConfigurableWarning.API.Options.IntOption.html": {
    "href": "api/ConfigurableWarning.API.Options.IntOption.html",
    "title": "Class IntOption | ConfigurableWarning Docs",
    "keywords": "Class IntOption Namespace ConfigurableWarning.API.Options Assembly RedstoneWizard08.ConfigurableWarning.dll An int option. This must be inherited from to use. Its state is stored in the OptionsState class. public class IntOption : IntSetting, IDisposable, IOption<int>, ICustomSetting, IExposedSetting, IUntypedOption Inheritance object Setting IntSetting IntOption Implements IDisposable IOption<int> ICustomSetting IExposedSetting IUntypedOption Inherited Members IntSetting.Value IntSetting.MinValue IntSetting.MaxValue IntSetting.Load(ISettingsSaveLoad) IntSetting.Save(ISettingsSaveLoad) IntSetting.SetValue(int, ISettingHandler) IntSetting.GetDebugUI(ISettingHandler) IntSetting.GetSettingUICell() IntSetting.Expose(int) IntSetting.Clamp(int) Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IntOption(string, int, string, int, int, Action<IntOption>[], bool) Initialize a IOption<T> with the int type. protected IntOption(string name, int defaultValue, string displayName, int min, int max, Action<IntOption>[] actions, bool doClamp = true) Parameters name string The option's name. defaultValue int The default value. displayName string The option's displayed name. min int The minimum value. max int The maximum value. actions Action<IntOption>[] Functions to run when the value is applied. doClamp bool Whether to clamp the value when changed. IntOption(string, int, string, int, int, bool) Initialize a IOption<T> with the int type. protected IntOption(string name, int defaultValue, string displayName, int min, int max, bool doClamp = true) Parameters name string The option's name. defaultValue int The default value. displayName string The option's displayed name. min int The minimum value. max int The maximum value. doClamp bool Whether to clamp the value when changed. Properties State Get or set this option's state. public int State { get; set; } Property Value int Methods ApplyValue() Applies the value. This is run when the user changes the value. This will sync it, update the state, and run any apply actions. public override void ApplyValue() AsOption() Get this as an IOption<T>. This is used for accessing default methods. public IOption<int> AsOption() Returns IOption<int> This as an IOption<T>. AsUntyped() Get this option as an IUntypedOption public IUntypedOption AsUntyped() Returns IUntypedOption The IUntypedOption form of this. GetDefaultValue() Get this option's default value. public override int GetDefaultValue() Returns int The option's default value. GetDisplayName() Get the display name of this option. public string GetDisplayName() Returns string The option's display name. GetMinMaxValue() Gets the minimum and maximum value of the setting. protected override (int, int) GetMinMaxValue() Returns (int, int) A tuple containing the minimum and maximum value of the setting. GetName() Gets this option's name. This is its name in the registry and in the state holder. public string GetName() Returns string The option's name. GetValue() Gets the current value of the option. WARNING! THIS MAY NOT ALWAYS BE CORRECT! USE THE STATE HOLDER INSTEAD! public int GetValue() Returns int The (potential) value of this option. Instance(string) Get an instance of an option. public static IntOption? Instance(string name) Parameters name string The option's name. Returns IntOption The option. RegisterSetting(string, string) Registers this setting with Content Settings. You probably want to use Register(string, string) instead. public void RegisterSetting(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. SetValue(int) Sets the option's value. This will NOT update it in the state! public void SetValue(int value) Parameters value int The new value. SetValue(object) Sets the option's value. This will NOT update it in the state! public void SetValue(object value) Parameters value object The new value."
  },
  "api/ConfigurableWarning.API.Options.TextOption.html": {
    "href": "api/ConfigurableWarning.API.Options.TextOption.html",
    "title": "Class TextOption | ConfigurableWarning Docs",
    "keywords": "Class TextOption Namespace ConfigurableWarning.API.Options Assembly RedstoneWizard08.ConfigurableWarning.dll A string option. This must be inherited from to use. Its state is stored in the OptionsState class. public class TextOption : TextSetting, IDisposable, IOption<string>, ICustomSetting, IExposedSetting, IUntypedOption Inheritance object Setting TextSetting TextOption Implements IDisposable IOption<string> ICustomSetting IExposedSetting IUntypedOption Inherited Members TextSetting.Value TextSetting.Load(ISettingsSaveLoad) TextSetting.Save(ISettingsSaveLoad) TextSetting.SetValue(string, ISettingHandler) TextSetting.GetSettingUICell() TextSetting.GetDebugUI(ISettingHandler) TextSetting.Expose(string) Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TextOption(string, string, string) Initialize a IOption<T> with the string type. protected TextOption(string name, string defaultValue, string displayName) Parameters name string The option's name. defaultValue string The default value. displayName string The option's displayed name. TextOption(string, string, string, Action<TextOption>[]) Initialize a IOption<T> with the string type. protected TextOption(string name, string defaultValue, string displayName, Action<TextOption>[] actions) Parameters name string The option's name. defaultValue string The default value. displayName string The option's displayed name. actions Action<TextOption>[] Functions to run when the value is applied. Properties State Get or set this option's state. public string? State { get; set; } Property Value string Methods ApplyValue() Applies the value. This is run when the user changes the value. This will sync it, update the state, and run any apply actions. public override void ApplyValue() AsOption() Get this as an IOption<T>. This is used for accessing default methods. public IOption<string> AsOption() Returns IOption<string> This as an IOption<T>. AsUntyped() Get this option as an IUntypedOption public IUntypedOption AsUntyped() Returns IUntypedOption The IUntypedOption form of this. GetDefaultValue() Get this option's default value. public override string GetDefaultValue() Returns string The option's default value. GetDisplayName() Get the display name of this option. public string GetDisplayName() Returns string The option's display name. GetName() Gets this option's name. This is its name in the registry and in the state holder. public string GetName() Returns string The option's name. GetValue() Gets the current value of the option. WARNING! THIS MAY NOT ALWAYS BE CORRECT! USE THE STATE HOLDER INSTEAD! public string GetValue() Returns string The (potential) value of this option. Instance(string) Get an instance of an option. public static TextOption? Instance(string name) Parameters name string The option's name. Returns TextOption The option. RegisterSetting(string, string) Registers this setting with Content Settings. You probably want to use Register(string, string) instead. public void RegisterSetting(string tab, string category) Parameters tab string The tab to register to. category string The category this option belongs to. SetValue(object) Sets the option's value. This will NOT update it in the state! public void SetValue(object value) Parameters value object The new value. SetValue(string) Sets the option's value. This will NOT update it in the state! public void SetValue(string value) Parameters value string The new value."
  },
  "api/ConfigurableWarning.API.Options.html": {
    "href": "api/ConfigurableWarning.API.Options.html",
    "title": "Namespace ConfigurableWarning.API.Options | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning.API.Options Classes BoolOption A boolean option. This must be inherited from to use. Its state is stored in the OptionsState class. EnumOption<T> An enum option. This must be inherited from to use. Its state is stored in the OptionsState class. FloatOption A float option. This must be inherited from to use. Its state is stored in the OptionsState class. IntOption An int option. This must be inherited from to use. Its state is stored in the OptionsState class. TextOption A string option. This must be inherited from to use. Its state is stored in the OptionsState class. Interfaces IOption<T> Represents an option. This interface is implemented by all options. IUntypedOption A simplified version of IOption<T> that has no type argument, and uses objects instead (with casts)."
  },
  "api/ConfigurableWarning.API.OptionsState.html": {
    "href": "api/ConfigurableWarning.API.OptionsState.html",
    "title": "Class OptionsState | ConfigurableWarning Docs",
    "keywords": "Class OptionsState Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll The class responsible for storing options' values. public class OptionsState Inheritance object OptionsState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance The current instance of this OptionsState. public static OptionsState Instance { get; } Property Value OptionsState Methods Apply(string) Replaces all states with the JSON-encoded map provided, removing any not present in the provided string, and replacing all that are already present. public void Apply(string json) Parameters json string The JSON-encoded map. Clear() Clears all states from the internal dictionary, unregistering all of its options. This does NOT unregister ANYTHING from the OptionManager or ContentSettings' SettingsLoader. public void Clear() Collect() Collect and serialize (with Newtonsoft.Json.JsonConvert) all registered states to a JSON string. public string Collect() Returns string The JSON-formatted states. Get<T>(IOption<T>) Gets the value of an option. This will forward to Get<T>(string) based on GetName(). public T? Get<T>(IOption<T> opt) Parameters opt IOption<T> The option to reference. Returns T The option's value. Type Parameters T The option's value type. Get<T>(string) Gets an option's value from the internal storage. public T? Get<T>(string name) Parameters name string The option's name. Returns T The option's value. Type Parameters T The value type. Has(string) Returns true if the option is registered in the state. public bool Has(string name) Parameters name string The option's name. Returns bool True if the option has a value in the state. Has<T>(IOption<T>) Returns true if the option is registered in the state. public bool Has<T>(IOption<T> opt) Parameters opt IOption<T> The option to reference. Returns bool True if the option has a value in the state. Type Parameters T The option's value type. Register<T>(IOption<T>) Registers a typed option to the state. public void Register<T>(IOption<T> opt) Parameters opt IOption<T> The option to register. Type Parameters T The option's value type. Remove(string) Removes the option's value from the state, unregistering it. This does NOT unregister it from the OptionManager or ContentSettings' SettingsLoader. public void Remove(string name) Parameters name string The option's name. Remove<T>(IOption<T>) Removes the option's value from the state, unregistering it. This does NOT unregister it from the OptionManager or ContentSettings' SettingsLoader. public void Remove<T>(IOption<T> opt) Parameters opt IOption<T> The option to remove. Type Parameters T The option's value type. Set<T>(IOption<T>, T) Sets the provided option's state. public void Set<T>(IOption<T> opt, T value) Parameters opt IOption<T> The option to set for. value T The new value. Type Parameters T The option's value type. Set<T>(string, T) Sets the state based on the option's name. public void Set<T>(string name, T value) Parameters name string The option's name. value T The new value. Type Parameters T The value type. Update<T>(IOption<T>) Updates an option's value in the state. This will set the value in the state to its contained value. public void Update<T>(IOption<T> opt) Parameters opt IOption<T> The option. Type Parameters T The option's value type."
  },
  "api/ConfigurableWarning.API.SettingPatches.html": {
    "href": "api/ConfigurableWarning.API.SettingPatches.html",
    "title": "Class SettingPatches | ConfigurableWarning Docs",
    "keywords": "Class SettingPatches Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll Settings patches [HarmonyPatch] public class SettingPatches Inheritance object SettingPatches Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetValueFloat(ref FloatSetting, float, ISettingHandler) Patches the SetValue(float, ISettingHandler) method to not clamp if it's disabled. [HarmonyPostfix] [HarmonyPatch(typeof(FloatSetting), \"SetValue\")] public static void SetValueFloat(ref FloatSetting __instance, float value, ISettingHandler handler) Parameters __instance FloatSetting The current instance of a FloatSetting. value float The value handler ISettingHandler The settings handler SetValueFloatPre(ref FloatSetting, float, ISettingHandler) Patches the SetValue(float, ISettingHandler) method to capture the value. [HarmonyPrefix] [HarmonyPatch(typeof(FloatSetting), \"SetValue\")] public static void SetValueFloatPre(ref FloatSetting __instance, float value, ISettingHandler handler) Parameters __instance FloatSetting The current instance of a FloatSetting. value float The value handler ISettingHandler The settings handler SetValueInt(ref IntSetting, int, ISettingHandler) Patches the SetValue(int, ISettingHandler) method to not clamp if it's disabled. [HarmonyPostfix] [HarmonyPatch(typeof(IntSetting), \"SetValue\")] public static void SetValueInt(ref IntSetting __instance, int newValue, ISettingHandler settingHandler) Parameters __instance IntSetting The current instance of an IntSetting. newValue int The value settingHandler ISettingHandler The settings handler SetValueIntPre(ref IntSetting, int, ISettingHandler) Patches the SetValue(int, ISettingHandler) method to capture the value. [HarmonyPrefix] [HarmonyPatch(typeof(IntSetting), \"SetValue\")] public static void SetValueIntPre(ref IntSetting __instance, int newValue, ISettingHandler settingHandler) Parameters __instance IntSetting The current instance of an IntSetting. newValue int The value settingHandler ISettingHandler The settings handler"
  },
  "api/ConfigurableWarning.API.StateHolder-1.html": {
    "href": "api/ConfigurableWarning.API.StateHolder-1.html",
    "title": "Class StateHolder<T> | ConfigurableWarning Docs",
    "keywords": "Class StateHolder<T> Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll A state holder. public sealed class StateHolder<T> Type Parameters T The option's type. Inheritance object StateHolder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties this[string] Get or set an option's state. public T? this[string name] { get; set; } Parameters name string The option. Property Value T Its state."
  },
  "api/ConfigurableWarning.API.States.html": {
    "href": "api/ConfigurableWarning.API.States.html",
    "title": "Class States | ConfigurableWarning Docs",
    "keywords": "Class States Namespace ConfigurableWarning.API Assembly RedstoneWizard08.ConfigurableWarning.dll State helpers. public static class States Inheritance object States Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bools Boolean states. public static readonly StateHolder<bool> Bools Field Value StateHolder<bool> Enums Enum states. public static readonly EnumStateHolder Enums Field Value EnumStateHolder Floats Float states. public static readonly StateHolder<float> Floats Field Value StateHolder<float> Ints Int states. public static readonly StateHolder<int> Ints Field Value StateHolder<int> Strings String states. public static readonly StateHolder<string> Strings Field Value StateHolder<string>"
  },
  "api/ConfigurableWarning.API.html": {
    "href": "api/ConfigurableWarning.API.html",
    "title": "Namespace ConfigurableWarning.API | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning.API Namespaces ConfigurableWarning.API.Attributes ConfigurableWarning.API.Compat ConfigurableWarning.API.Options Classes ConfigurableWarningAPI ConfigurableWarning's main API entrypoint. EnumStateHolder A state holder for EnumOptions. EnumUtil OptionExt Extension Methods. OptionLoader Responsible for loading, holding, and registering options. OptionManager Manages options' loading, saving, registration, and accessing. OptionSyncer Handles syncing all the options in OptionsState using the MyceliumNetworking.MyceliumNetwork API. OptionsState The class responsible for storing options' values. SettingPatches Settings patches StateHolder<T> A state holder. States State helpers."
  },
  "api/ConfigurableWarning.ConfigurableWarning.html": {
    "href": "api/ConfigurableWarning.ConfigurableWarning.html",
    "title": "Class ConfigurableWarning | ConfigurableWarning Docs",
    "keywords": "Class ConfigurableWarning Namespace ConfigurableWarning Assembly RedstoneWizard08.ConfigurableWarning.dll ConfigurableWarning's BepInEx entrypoint. [ContentWarningPlugin(\"RedstoneWizard08.ConfigurableWarning\", \"1.15.2\", false)] [BepInPlugin(\"RedstoneWizard08.ConfigurableWarning\", \"RedstoneWizard08.ConfigurableWarning\", \"1.15.2\")] [BepInDependency(\"RugbugRedfern.MyceliumNetworking\", BepInDependency.DependencyFlags.HardDependency)] public class ConfigurableWarning : BaseUnityPlugin Inheritance object Object Component Behaviour MonoBehaviour BaseUnityPlugin ConfigurableWarning Inherited Members BaseUnityPlugin.Info BaseUnityPlugin.Logger BaseUnityPlugin.Config MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields ModID The ModID for Mycelium. This is: CF + G (in hex = 0x47) + W (in hex = 0x57), for ConFiGurableWarning public const uint ModID = 13584215 Field Value uint Methods Awake() Initializes the plugin public void Awake() Patch() Applies patches public void Patch() Unpatch() Un-applies patches public void Unpatch()"
  },
  "api/ConfigurableWarning.MyPluginInfo.html": {
    "href": "api/ConfigurableWarning.MyPluginInfo.html",
    "title": "Class MyPluginInfo | ConfigurableWarning Docs",
    "keywords": "Class MyPluginInfo Namespace ConfigurableWarning Assembly RedstoneWizard08.ConfigurableWarning.dll public static class MyPluginInfo Inheritance object MyPluginInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PLUGIN_GUID public const string PLUGIN_GUID = \"RedstoneWizard08.ConfigurableWarning\" Field Value string PLUGIN_NAME public const string PLUGIN_NAME = \"RedstoneWizard08.ConfigurableWarning\" Field Value string PLUGIN_VERSION public const string PLUGIN_VERSION = \"1.15.2\" Field Value string"
  },
  "api/ConfigurableWarning.Patches.CameraPatch.html": {
    "href": "api/ConfigurableWarning.Patches.CameraPatch.html",
    "title": "Class CameraPatch | ConfigurableWarning Docs",
    "keywords": "Class CameraPatch Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll Patches for the camera. [HarmonyPatch] public class CameraPatch Inheritance object CameraPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Update(MainCamera) Updates the camera's field of view. [HarmonyPostfix] [HarmonyPatch(typeof(MainCamera), \"Update\")] public static void Update(MainCamera __instance) Parameters __instance MainCamera The current instance of a MainCamera."
  },
  "api/ConfigurableWarning.Patches.DivingBellPatch.html": {
    "href": "api/ConfigurableWarning.Patches.DivingBellPatch.html",
    "title": "Class DivingBellPatch | ConfigurableWarning Docs",
    "keywords": "Class DivingBellPatch Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll Diving Bell patches [HarmonyPatch] public class DivingBellPatch Inheritance object DivingBellPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckForPlayers(DiveBellPlayerDetector, ref ICollection<Player>) Patches the player checker to allow for all players to not need to be inside. [HarmonyPostfix] [HarmonyPatch(typeof(DiveBellPlayerDetector), \"CheckForPlayers\")] public static void CheckForPlayers(DiveBellPlayerDetector __instance, ref ICollection<Player> __result) Parameters __instance DiveBellPlayerDetector The current instance of the DiveBellPlayerDetector. __result ICollection<Player> The players \"inside\" the diving bell IsFullyClosed(DivingBellDoor, ref bool) Patches the diving bell to allow you to leave without your friends. [HarmonyPostfix] [HarmonyPatch(typeof(DivingBellDoor), \"IsFullyClosed\")] public static void IsFullyClosed(DivingBellDoor __instance, ref bool __result) Parameters __instance DivingBellDoor The current instance of the DivingBellDoor. __result bool Update(DivingBell) Patches the diving bell's update function to apply our settings [HarmonyPostfix] [HarmonyPatch(typeof(DivingBell), \"Update\")] public static void Update(DivingBell __instance) Parameters __instance DivingBell The current instance of the DivingBell."
  },
  "api/ConfigurableWarning.Patches.LobbyPatch.html": {
    "href": "api/ConfigurableWarning.Patches.LobbyPatch.html",
    "title": "Class LobbyPatch | ConfigurableWarning Docs",
    "keywords": "Class LobbyPatch Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll Patches the lobby system to allow truly private games. [HarmonyPatch] public class LobbyPatch Inheritance object LobbyPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddSteamClient(SteamLobbyHandler, CSteamID) Patches the steam client adder to kick if they are not friends (and the private host setting is true) [HarmonyPrefix] [HarmonyPatch(typeof(SteamLobbyHandler), \"AddSteamClient\")] public static bool AddSteamClient(SteamLobbyHandler __instance, CSteamID cSteamID) Parameters __instance SteamLobbyHandler The current instance of the SteamLobbyHandler. cSteamID CSteamID The new player's Steam ID Returns bool HarmonyLib.HarmonyPrefix continue-or-not flag (this is a prefix) IsPlayingWithRandoms(SteamLobbyHandler, ref bool) Patches the random player allower thingamajig to apply the privacy setting [HarmonyPostfix] [HarmonyPatch(typeof(SteamLobbyHandler), \"IsPlayingWithRandoms\")] public static void IsPlayingWithRandoms(SteamLobbyHandler __instance, ref bool __result) Parameters __instance SteamLobbyHandler The current instance of the SteamLobbyHandler. __result bool The bool result OnNetworkingSessionRequest(SteamLobbyHandler, SteamNetworkingMessagesSessionRequest_t) Patches the networking session responder to apply our settings. [HarmonyPrefix] [HarmonyPatch(typeof(SteamLobbyHandler), \"OnNetworkingSessionRequest\")] public static bool OnNetworkingSessionRequest(SteamLobbyHandler __instance, SteamNetworkingMessagesSessionRequest_t param) Parameters __instance SteamLobbyHandler The current instance of the SteamLobbyHandler. param SteamNetworkingMessagesSessionRequest_t The session request Returns bool HarmonyLib.HarmonyPrefix continue-or-not flag (this is a prefix) OpenLobby(SteamLobbyHandler) Patches the lobby opener to allow private games. [HarmonyPrefix] [HarmonyPatch(typeof(SteamLobbyHandler), \"OpenLobby\")] public static bool OpenLobby(SteamLobbyHandler __instance) Parameters __instance SteamLobbyHandler The current instance of the SteamLobbyHandler. Returns bool HarmonyLib.HarmonyPrefix continue-or-not flag (this is a prefix)"
  },
  "api/ConfigurableWarning.Patches.PlayerPatch.html": {
    "href": "api/ConfigurableWarning.Patches.PlayerPatch.html",
    "title": "Class PlayerPatch | ConfigurableWarning Docs",
    "keywords": "Class PlayerPatch Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll Player & PlayerData patch [HarmonyPatch] public class PlayerPatch Inheritance object PlayerPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckOxygen(Player) Patches the CheckOxygen value to add our custom stuff. [HarmonyPrefix] [HarmonyPatch(typeof(Player), \"CheckOxygen\")] public static bool CheckOxygen(Player __instance) Parameters __instance Player The current instance of a Player. Returns bool HarmonyLib.HarmonyPrefix continue-or-not flag (this is a prefix) GetMaxHealth() Internal max health value. public static float GetMaxHealth() Returns float The custom max health value. GetMaxOxygen() Internal max oxygen value. public static float GetMaxOxygen() Returns float The custom max oxygen value. UpdateValuesPost(PlayerData) Patches the UpdateValues method to include our custom oxygen code [HarmonyPostfix] [HarmonyPatch(typeof(Player.PlayerData), \"UpdateValues\")] public static void UpdateValuesPost(Player.PlayerData __instance) Parameters __instance Player.PlayerData The current instance of a Player.PlayerData. UpdateValuesPre(PlayerData) Stores the current usingOxygen flag and modifies a few more things. [HarmonyPrefix] [HarmonyPatch(typeof(Player.PlayerData), \"UpdateValues\")] public static bool UpdateValuesPre(Player.PlayerData __instance) Parameters __instance Player.PlayerData The current instance of a Player.PlayerData. Returns bool HarmonyLib.HarmonyPrefix continue-or-not flag (this is a prefix)"
  },
  "api/ConfigurableWarning.Patches.QuotaPatch.html": {
    "href": "api/ConfigurableWarning.Patches.QuotaPatch.html",
    "title": "Class QuotaPatch | ConfigurableWarning Docs",
    "keywords": "Class QuotaPatch Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll Quota patches [HarmonyPatch] public class QuotaPatch Inheritance object QuotaPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Constructor(RoomStatsHolder, SurfaceNetworkHandler, int, int, int) Patches the days per quota to reflect the set value. This patches the constructor of RoomStatsHolder. [HarmonyPostfix] [HarmonyPatch(typeof(RoomStatsHolder), MethodType.Constructor, new Type[] { typeof(SurfaceNetworkHandler), typeof(int), typeof(int), typeof(int) })] public static void Constructor(RoomStatsHolder __instance, SurfaceNetworkHandler handler, int startMoney, int startQuotaToReachToReach, int daysPerQuota) Parameters __instance RoomStatsHolder The current instance of the RoomStatsHolder. handler SurfaceNetworkHandler The current SurfaceNetworkHandler startMoney int The starting money startQuotaToReachToReach int The starting quota to reach daysPerQuota int The original days per quota (constructor arg) GetDaysPerQuota(RoomStatsHolder, ref int) Patches the getter for days per quota. [HarmonyPostfix] [HarmonyPatch(typeof(RoomStatsHolder), \"DaysPerQutoa\", MethodType.Getter)] public static void GetDaysPerQuota(RoomStatsHolder __instance, ref int __result) Parameters __instance RoomStatsHolder The current instance of the RoomStatsHolder. __result int The resulting value"
  },
  "api/ConfigurableWarning.Patches.SpawnPatch.html": {
    "href": "api/ConfigurableWarning.Patches.SpawnPatch.html",
    "title": "Class SpawnPatch | ConfigurableWarning Docs",
    "keywords": "Class SpawnPatch Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll Spawning mechanic patches [HarmonyPatch] public class SpawnPatch Inheritance object SpawnPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetExtraBudgetForDay(int, ref int) Patches extra spawn budgets to be between the day one value and day three value. This will interpolate the budget to be spread across all days. [HarmonyPostfix] [HarmonyPatch(typeof(BigNumbers), \"GetExtraBudgetForDay\")] public static void GetExtraBudgetForDay(int day, ref int __result) Parameters day int The day to calculate for __result int The output extra spawn budget GetMonsterBudgetForDayFirstWave(int, ref int) Patches the second wave monster budget to account for the potential extra days. [HarmonyPostfix] [HarmonyPatch(typeof(BigNumbers), \"GetMonsterBudgetForDayFirstWave\")] public static void GetMonsterBudgetForDayFirstWave(int day, ref int __result) Parameters day int The day to calculate for __result int The output budget GetMonsterBudgetForSecondWave(int, ref int) Patches the second wave monster budget to account for the potential extra days. [HarmonyPostfix] [HarmonyPatch(typeof(BigNumbers), \"GetMonsterBudgetForSecondWave\")] public static void GetMonsterBudgetForSecondWave(int day, ref int __result) Parameters day int The day to calculate for __result int The output budget"
  },
  "api/ConfigurableWarning.Patches.StaminaPatch.html": {
    "href": "api/ConfigurableWarning.Patches.StaminaPatch.html",
    "title": "Class StaminaPatch | ConfigurableWarning Docs",
    "keywords": "Class StaminaPatch Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll Stamina patches [HarmonyPatch] public class StaminaPatch Inheritance object StaminaPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start(ref PlayerController) Patches the player's stamina when they spawn. [HarmonyPostfix] [HarmonyPatch(typeof(PlayerController), \"Start\")] public static void Start(ref PlayerController __instance) Parameters __instance PlayerController The current instance of the PlayerController. Update(ref PlayerController) Patches the player's stamina parameters. [HarmonyPrefix] [HarmonyPatch(typeof(PlayerController), \"Update\")] public static void Update(ref PlayerController __instance) Parameters __instance PlayerController The current instance of the PlayerController. UpdatePost(ref PlayerController) Patches the player controller to reflect stamina settings. [HarmonyPostfix] [HarmonyPatch(typeof(PlayerController), \"Update\")] public static void UpdatePost(ref PlayerController __instance) Parameters __instance PlayerController The current instance of the PlayerController."
  },
  "api/ConfigurableWarning.Patches.UIPatches.html": {
    "href": "api/ConfigurableWarning.Patches.UIPatches.html",
    "title": "Class UIPatches | ConfigurableWarning Docs",
    "keywords": "Class UIPatches Namespace ConfigurableWarning.Patches Assembly RedstoneWizard08.ConfigurableWarning.dll HUD/UI patches [HarmonyPatch] public class UIPatches Inheritance object UIPatches Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UpdateHealth(UI_Health) Patches the health bar to accurately reflect the player's max health, as it's normally constant. [HarmonyPostfix] [HarmonyPatch(typeof(UI_Health), \"Update\")] public static void UpdateHealth(UI_Health __instance) Parameters __instance UI_Health The current instance of the UI_Health."
  },
  "api/ConfigurableWarning.Patches.html": {
    "href": "api/ConfigurableWarning.Patches.html",
    "title": "Namespace ConfigurableWarning.Patches | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning.Patches Classes CameraPatch Patches for the camera. DivingBellPatch Diving Bell patches LobbyPatch Patches the lobby system to allow truly private games. PlayerPatch Player & PlayerData patch QuotaPatch Quota patches SpawnPatch Spawning mechanic patches StaminaPatch Stamina patches UIPatches HUD/UI patches"
  },
  "api/ConfigurableWarning.Settings.BuiltInSettings.html": {
    "href": "api/ConfigurableWarning.Settings.BuiltInSettings.html",
    "title": "Class BuiltInSettings | ConfigurableWarning Docs",
    "keywords": "Class BuiltInSettings Namespace ConfigurableWarning.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll ConfigurableWarning's built-in settings. [Tab(\"GAMEPLAY\")] public static class BuiltInSettings Inheritance object BuiltInSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/ConfigurableWarning.Settings.Compat.FlashcardCompat.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.FlashcardCompat.html",
    "title": "Class FlashcardCompat | ConfigurableWarning Docs",
    "keywords": "Class FlashcardCompat Namespace ConfigurableWarning.Settings.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Flashcard compat settings [CompatModule(new string[] { \"Flashcard\" })] public class FlashcardCompat : ICompatModule Inheritance object FlashcardCompat Implements ICompatModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() Initialize the compat module public void Init()"
  },
  "api/ConfigurableWarning.Settings.Compat.FlashcardSettingKeys.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.FlashcardSettingKeys.html",
    "title": "Class FlashcardSettingKeys | ConfigurableWarning Docs",
    "keywords": "Class FlashcardSettingKeys Namespace ConfigurableWarning.Settings.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Settings keys for Flashcard compat public static class FlashcardSettingKeys Inheritance object FlashcardSettingKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClipFramerate public const string ClipFramerate = \"ClipFramerate\" Field Value string ClipLength public const string ClipLength = \"ClipLength\" Field Value string ClipQuality public const string ClipQuality = \"ClipQuality\" Field Value string EnableExtraCamera public const string EnableExtraCamera = \"EnableExtraCamera\" Field Value string PacketDelay public const string PacketDelay = \"PacketDelay\" Field Value string VerboseLogging public const string VerboseLogging = \"VerboseLogging\" Field Value string"
  },
  "api/ConfigurableWarning.Settings.Compat.SceneType.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.SceneType.html",
    "title": "Enum SceneType | ConfigurableWarning Docs",
    "keywords": "Enum SceneType Namespace ConfigurableWarning.Settings.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Scene types public enum SceneType Fields FactoryScene = 0 HarbourScene = 1 MinesScene = 2"
  },
  "api/ConfigurableWarning.Settings.Compat.SpookdiversCompat.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.SpookdiversCompat.html",
    "title": "Class SpookdiversCompat | ConfigurableWarning Docs",
    "keywords": "Class SpookdiversCompat Namespace ConfigurableWarning.Settings.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Spookdivers compat settings [CompatModule(new string[] { \"Spookdivers\" })] public class SpookdiversCompat : ICompatModule Inheritance object SpookdiversCompat Implements ICompatModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() Initialize the compat module public void Init()"
  },
  "api/ConfigurableWarning.Settings.Compat.SpookdiversSettingKeys.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.SpookdiversSettingKeys.html",
    "title": "Class SpookdiversSettingKeys | ConfigurableWarning Docs",
    "keywords": "Class SpookdiversSettingKeys Namespace ConfigurableWarning.Settings.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Settings keys for Spookdivers compat public static class SpookdiversSettingKeys Inheritance object SpookdiversSettingKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FakeBells public const string FakeBells = \"FakeBells\" Field Value string ForceScene public const string ForceScene = \"ForceScene\" Field Value string LoweringSpeed public const string LoweringSpeed = \"LoweringSpeed\" Field Value string ReadyTime public const string ReadyTime = \"ReadyTime\" Field Value string SceneName public const string SceneName = \"SceneName\" Field Value string"
  },
  "api/ConfigurableWarning.Settings.Compat.ViralityCompat.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.ViralityCompat.html",
    "title": "Class ViralityCompat | ConfigurableWarning Docs",
    "keywords": "Class ViralityCompat Namespace ConfigurableWarning.Settings.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Virality compat settings [CompatModule(new string[] { \"Virality\" })] public class ViralityCompat : ICompatModule Inheritance object ViralityCompat Implements ICompatModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() Initialize the compat module public void Init()"
  },
  "api/ConfigurableWarning.Settings.Compat.ViralitySettingKeys.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.ViralitySettingKeys.html",
    "title": "Class ViralitySettingKeys | ConfigurableWarning Docs",
    "keywords": "Class ViralitySettingKeys Namespace ConfigurableWarning.Settings.Compat Assembly RedstoneWizard08.ConfigurableWarning.dll Settings keys for Virality compat public static class ViralitySettingKeys Inheritance object ViralitySettingKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowLateJoin public const string AllowLateJoin = \"AllowLateJoin\" Field Value string EnableVoiceFix public const string EnableVoiceFix = \"EnableVoiceFix\" Field Value string MaxPlayers public const string MaxPlayers = \"MaxPlayers\" Field Value string"
  },
  "api/ConfigurableWarning.Settings.Compat.html": {
    "href": "api/ConfigurableWarning.Settings.Compat.html",
    "title": "Namespace ConfigurableWarning.Settings.Compat | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning.Settings.Compat Classes FlashcardCompat Flashcard compat settings FlashcardSettingKeys Settings keys for Flashcard compat SpookdiversCompat Spookdivers compat settings SpookdiversSettingKeys Settings keys for Spookdivers compat ViralityCompat Virality compat settings ViralitySettingKeys Settings keys for Virality compat Enums SceneType Scene types"
  },
  "api/ConfigurableWarning.Settings.SettingKeys.html": {
    "href": "api/ConfigurableWarning.Settings.SettingKeys.html",
    "title": "Class SettingKeys | ConfigurableWarning Docs",
    "keywords": "Class SettingKeys Namespace ConfigurableWarning.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll The string names of each setting. public static class SettingKeys Inheritance object SettingKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DaysPerQuota public const string DaysPerQuota = \"DaysPerQuota\" Field Value string Fov public const string Fov = \"Fov\" Field Value string Health public const string Health = \"Health\" Field Value string InfiniteOxygen public const string InfiniteOxygen = \"InfiniteOxygen\" Field Value string MaxStamina public const string MaxStamina = \"MaxStamina\" Field Value string Oxygen public const string Oxygen = \"Oxygen\" Field Value string OxygenRefillRate public const string OxygenRefillRate = \"OxygenRefillRate\" Field Value string OxygenUsageMultiplier public const string OxygenUsageMultiplier = \"OxygenUsageMultiplier\" Field Value string PrivateHost public const string PrivateHost = \"PrivateHost\" Field Value string RefillOxygenInDiveBell public const string RefillOxygenInDiveBell = \"RefillOxygenInDiveBell\" Field Value string RefillOxygenOnSurface public const string RefillOxygenOnSurface = \"RefillOxygenOnSurface\" Field Value string RequireAllPlayersInDiveBell public const string RequireAllPlayersInDiveBell = \"RequireAllPlayersInDiveBell\" Field Value string RequireDiveBellDoorClosed public const string RequireDiveBellDoorClosed = \"RequireDiveBellDoorClosed\" Field Value string SprintMultiplier public const string SprintMultiplier = \"SprintMultiplier\" Field Value string SprintSpeed public const string SprintSpeed = \"SprintSpeed\" Field Value string StaminaRegenRate public const string StaminaRegenRate = \"StaminaRegenRate\" Field Value string UseOxygenInDiveBell public const string UseOxygenInDiveBell = \"UseOxygenInDiveBell\" Field Value string UseOxygenOnSurface public const string UseOxygenOnSurface = \"UseOxygenOnSurface\" Field Value string"
  },
  "api/ConfigurableWarning.Settings.SettingsUtil.html": {
    "href": "api/ConfigurableWarning.Settings.SettingsUtil.html",
    "title": "Class SettingsUtil | ConfigurableWarning Docs",
    "keywords": "Class SettingsUtil Namespace ConfigurableWarning.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll ConfigurableWarning's settings utilities. public static class SettingsUtil Inheritance object SettingsUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UpdateQuotaDays(IntOption) Updates remaining days in the game's quota days counter. public static void UpdateQuotaDays(IntOption _opt) Parameters _opt IntOption The option (see DaysPerQuota)."
  },
  "api/ConfigurableWarning.Settings.html": {
    "href": "api/ConfigurableWarning.Settings.html",
    "title": "Namespace ConfigurableWarning.Settings | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning.Settings Namespaces ConfigurableWarning.Settings.Compat Classes BuiltInSettings ConfigurableWarning's built-in settings. SettingKeys The string names of each setting. SettingsUtil ConfigurableWarning's settings utilities."
  },
  "api/ConfigurableWarning.html": {
    "href": "api/ConfigurableWarning.html",
    "title": "Namespace ConfigurableWarning | ConfigurableWarning Docs",
    "keywords": "Namespace ConfigurableWarning Namespaces ConfigurableWarning.API ConfigurableWarning.Patches ConfigurableWarning.Settings Classes ConfigurableWarning ConfigurableWarning's BepInEx entrypoint. MyPluginInfo"
  },
  "api/ContentSettings.API.Attributes.SettingRegister.html": {
    "href": "api/ContentSettings.API.Attributes.SettingRegister.html",
    "title": "Class SettingRegister | ConfigurableWarning Docs",
    "keywords": "Class SettingRegister Namespace ContentSettings.API.Attributes Assembly RedstoneWizard08.ConfigurableWarning.dll Register a setting to the settings manager. [MeansImplicitUse] [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = true)] public class SettingRegister : Attribute Inheritance object Attribute SettingRegister Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SettingRegister(string, string?) Initializes a new instance of the SettingRegister class. public SettingRegister(string tab, string? category = null) Parameters tab string The name of the tab to register the setting to. category string The name of the tab category to register the setting to. Properties Category Gets the name of the tab category to register the setting to. public string? Category { get; } Property Value string Tab Gets the name of the tab to register the setting to. public string Tab { get; } Property Value string"
  },
  "api/ContentSettings.API.Attributes.html": {
    "href": "api/ContentSettings.API.Attributes.html",
    "title": "Namespace ContentSettings.API.Attributes | ConfigurableWarning Docs",
    "keywords": "Namespace ContentSettings.API.Attributes Classes SettingRegister Register a setting to the settings manager."
  },
  "api/ContentSettings.API.Settings.BoolSetting.html": {
    "href": "api/ContentSettings.API.Settings.BoolSetting.html",
    "title": "Class BoolSetting | ConfigurableWarning Docs",
    "keywords": "Class BoolSetting Namespace ContentSettings.API.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll A setting that contains a boolean value. public abstract class BoolSetting : Setting, IDisposable Inheritance object Setting BoolSetting Implements IDisposable Derived BoolOption Inherited Members Setting.ApplyValue() Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Value Gets a value indicating whether the setting is enabled. public bool Value { get; protected set; } Property Value bool Methods Expose(bool) Exposes the value of the setting as a string, for display purposes. public virtual string Expose(bool value) Parameters value bool The value to expose. Returns string The exposed value. GetDebugUI(ISettingHandler) Gets the setting UI for the setting. public override SettingUI GetDebugUI(ISettingHandler settingHandler) Parameters settingHandler ISettingHandler The setting handler to get the setting UI for. Returns SettingUI The setting UI for the setting. GetDefaultValue() Gets the default value for the setting. public abstract bool GetDefaultValue() Returns bool The default value for the setting. GetSettingUICell() Gets the setting UI for the setting. public override GameObject GetSettingUICell() Returns GameObject The setting UI for the setting. Load(ISettingsSaveLoad) Loads the setting using the provided loader. public override void Load(ISettingsSaveLoad loader) Parameters loader ISettingsSaveLoad The loader to load the setting with. Save(ISettingsSaveLoad) Save the setting using the provided loader. public override void Save(ISettingsSaveLoad saver) Parameters saver ISettingsSaveLoad The loader to save the setting with. SetValue(bool, ISettingHandler) Sets the value of the setting and saves it. public void SetValue(bool newValue, ISettingHandler settingHandler) Parameters newValue bool The new value of the setting. settingHandler ISettingHandler The setting handler to save the setting with."
  },
  "api/ContentSettings.API.Settings.BoolSettingUI.html": {
    "href": "api/ContentSettings.API.Settings.BoolSettingUI.html",
    "title": "Class BoolSettingUI | ConfigurableWarning Docs",
    "keywords": "Class BoolSettingUI Namespace ContentSettings.API.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll The UI for a boolean setting. public class BoolSettingUI : SettingInputUICell Inheritance object Object Component Behaviour MonoBehaviour SettingInputUICell BoolSettingUI Inherited Members MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Setup(Setting, ISettingHandler) Sets up the setting UI with the provided setting and setting handler. public override void Setup(Setting setting, ISettingHandler settingHandler) Parameters setting Setting The setting to set up the UI with. settingHandler ISettingHandler The setting handler to use for saving the setting."
  },
  "api/ContentSettings.API.Settings.DebugUI.BoolSettingsUI.html": {
    "href": "api/ContentSettings.API.Settings.DebugUI.BoolSettingsUI.html",
    "title": "Class BoolSettingsUI | ConfigurableWarning Docs",
    "keywords": "Class BoolSettingsUI Namespace ContentSettings.API.Settings.DebugUI Assembly RedstoneWizard08.ConfigurableWarning.dll The debug UI for a boolean setting. public class BoolSettingsUI : SettingUI, IEventHandler, IResolvedStyle, IStylePropertyAnimations, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Inheritance object CallbackEventHandler Focusable VisualElement SettingUI BoolSettingsUI Implements IEventHandler IResolvedStyle IStylePropertyAnimations ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.s_NextId VisualElement.s_EmptyClassList VisualElement.userDataPropertyKey VisualElement.disabledUssClassName VisualElement.m_Name VisualElement.m_ClassList VisualElement.m_PropertyBag VisualElement.m_Flags VisualElement.m_ViewDataKey VisualElement.m_RenderHints VisualElement.lastLayout VisualElement.lastPseudoPadding VisualElement.renderChainData VisualElement.m_Layout VisualElement.m_BoundingBox VisualElement.worldBoundingBoxDirtyDependencies VisualElement.m_WorldBoundingBox VisualElement.worldTransformInverseDirtyDependencies VisualElement.m_WorldTransformCache VisualElement.m_WorldTransformInverseCache VisualElement.m_WorldClip VisualElement.m_WorldClipMinusGroup VisualElement.m_WorldClipIsInfinite VisualElement.s_InfiniteRect VisualElement.triggerPseudoMask VisualElement.dependencyPseudoMask VisualElement.m_PseudoStates VisualElement.m_Style VisualElement.variableContext VisualElement.inheritedStylesHash VisualElement.controlid VisualElement.imguiContainerDescendantCount VisualElement.m_LanguageDirection VisualElement.m_LocalLanguageDirection VisualElement.k_GenerateVisualContentMarker VisualElement.m_SubRenderTargetMode VisualElement.s_runtimeMaterial VisualElement.m_defaultMaterial VisualElement.m_RunningAnimations VisualElement.s_NextParentVersion VisualElement.m_NextParentCachedVersion VisualElement.m_NextParentRequiredVersion VisualElement.m_CachedNextParentWithEventCallback VisualElement.m_EventCallbackCategories VisualElement.m_CachedEventCallbackParentCategories VisualElement.m_DefaultActionEventCategories VisualElement.m_DefaultActionAtTargetEventCategories VisualElement.k_RootVisualContainerName VisualElement.m_PhysicalParent VisualElement.m_LogicalParent VisualElement.s_EmptyList VisualElement.m_Children VisualElement.m_VisualTreeAssetSource VisualElement.s_CustomStyleAccess VisualElement.inlineStyleAccess VisualElement.styleSheetList VisualElement.s_InternalStyleSheetPath VisualElement.tooltipPropertyKey VisualElement.s_TypeData VisualElement.m_TypeData VisualElement.GetStylePropertyAnimationSystem() VisualElement.IStylePropertyAnimations.Start(StylePropertyId, float, float, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, int, int, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Length, Length, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Color, Color, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.StartEnum(StylePropertyId, int, int, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Background, Background, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, FontDefinition, FontDefinition, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Font, Font, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, TextShadow, TextShadow, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Scale, Scale, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Translate, Translate, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Rotate, Rotate, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, TransformOrigin, TransformOrigin, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundPosition, BackgroundPosition, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundRepeat, BackgroundRepeat, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundSize, BackgroundSize, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.CancelAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.CancelAllAnimations() VisualElement.IStylePropertyAnimations.HasRunningAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.UpdateAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.GetAllAnimations(List<StylePropertyId>) VisualElement.TryConvertLengthUnits(StylePropertyId, ref Length, ref Length, int) VisualElement.TryConvertTransformOriginUnits(ref TransformOrigin, ref TransformOrigin) VisualElement.TryConvertTranslateUnits(ref Translate, ref Translate) VisualElement.TryConvertBackgroundPositionUnits(ref BackgroundPosition, ref BackgroundPosition) VisualElement.TryConvertBackgroundSizeUnits(ref BackgroundSize, ref BackgroundSize) VisualElement.GetParentSizeForLengthConversion(StylePropertyId, int) VisualElement.MarkRenderHintsClean() VisualElement.ClearManualLayout() VisualElement.UpdateBoundingBox() VisualElement.UpdateWorldBoundingBox() VisualElement.UpdateWorldTransform() VisualElement.UpdateWorldTransformInverse() VisualElement.EnsureWorldTransformAndClipUpToDate() VisualElement.UpdateWorldClip() VisualElement.CombineClipRects(Rect, Rect) VisualElement.SubstractBorderPadding(Rect) VisualElement.ComputeAAAlignedBound(Rect, Matrix4x4) VisualElement.UpdateHoverPseudoState() VisualElement.IsPartOfCapturedChain(VisualElement, in IEventHandler) VisualElement.ChangeIMGUIContainerCount(int) VisualElement.ExecuteDefaultAction(EventBase) VisualElement.GetTooltipRect() VisualElement.SetTooltip(TooltipEvent) VisualElement.Focus() VisualElement.SetPanel(BaseVisualElementPanel) VisualElement.WillChangePanel(BaseVisualElementPanel) VisualElement.HasChangedPanel(BaseVisualElementPanel) VisualElement.SendEvent(EventBase) VisualElement.SendEvent(EventBase, DispatchMode) VisualElement.IncrementVersion(VersionChangeType) VisualElement.InvokeHierarchyChanged(HierarchyChangeType) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabledFromHierarchyPrivate(bool) VisualElement.SetEnabled(bool) VisualElement.PropagateEnabledToChildren(bool) VisualElement.MarkDirtyRepaint() VisualElement.InvokeGenerateVisualContent(MeshGenerationContext) VisualElement.GetFullHierarchicalViewDataKey(StringBuilder) VisualElement.GetFullHierarchicalViewDataKey() VisualElement.GetOrCreateViewData<T>(object, string) VisualElement.GetOrCreateViewData<T>(ScriptableObject, string) VisualElement.OverwriteFromViewData(object, string) VisualElement.SaveViewData() VisualElement.IsViewDataPersitenceSupportedOnChildren(bool) VisualElement.OnViewDataReady(bool) VisualElement.OnViewDataReady() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.AssignMeasureFunction() VisualElement.RemoveMeasureFunction() VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.Measure(YogaNode, float, YogaMeasureMode, float, YogaMeasureMode) VisualElement.SetSize(Vector2) VisualElement.FinalizeLayout() VisualElement.SetInlineRule(StyleSheet, StyleRule) VisualElement.UpdateInlineRule(StyleSheet, StyleRule) VisualElement.SetComputedStyle(ref ComputedStyle) VisualElement.ResetPositionProperties() VisualElement.ToString() VisualElement.GetClasses() VisualElement.GetClassesForIteration() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.GetProperty(PropertyName) VisualElement.SetProperty(PropertyName, object) VisualElement.HasProperty(PropertyName) VisualElement.TryGetPropertyInternal(PropertyName, out object) VisualElement.CheckUserKeyArgument(PropertyName) VisualElement.SetPropertyInternal(PropertyName, object) VisualElement.UpdateCursorStyle(long) VisualElement.getRuntimeMaterial() VisualElement.GetAnimationSystem() VisualElement.RegisterAnimation(IValueAnimationUpdate) VisualElement.UnregisterAnimation(IValueAnimationUpdate) VisualElement.UnregisterRunningAnimations() VisualElement.RegisterRunningAnimations() VisualElement.ITransitionAnimations.Start(float, float, int, Action<VisualElement, float>) VisualElement.ITransitionAnimations.Start(Rect, Rect, int, Action<VisualElement, Rect>) VisualElement.ITransitionAnimations.Start(Color, Color, int, Action<VisualElement, Color>) VisualElement.ITransitionAnimations.Start(Vector3, Vector3, int, Action<VisualElement, Vector3>) VisualElement.ITransitionAnimations.Start(Vector2, Vector2, int, Action<VisualElement, Vector2>) VisualElement.ITransitionAnimations.Start(Quaternion, Quaternion, int, Action<VisualElement, Quaternion>) VisualElement.ITransitionAnimations.Start(StyleValues, StyleValues, int) VisualElement.ITransitionAnimations.Start(Func<VisualElement, float>, float, int, Action<VisualElement, float>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Rect>, Rect, int, Action<VisualElement, Rect>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Color>, Color, int, Action<VisualElement, Color>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Vector3>, Vector3, int, Action<VisualElement, Vector3>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Vector2>, Vector2, int, Action<VisualElement, Vector2>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Quaternion>, Quaternion, int, Action<VisualElement, Quaternion>) VisualElement.StartAnimation<T>(ValueAnimation<T>, Func<VisualElement, T>, T, int, Action<VisualElement, T>) VisualElement.AssignStyleValues(VisualElement, StyleValues) VisualElement.ReadCurrentValues(VisualElement, StyleValues) VisualElement.ITransitionAnimations.Start(StyleValues, int) VisualElement.Start(Func<VisualElement, StyleValues>, StyleValues, int) VisualElement.ITransitionAnimations.Layout(Rect, int) VisualElement.ITransitionAnimations.TopLeft(Vector2, int) VisualElement.ITransitionAnimations.Size(Vector2, int) VisualElement.ITransitionAnimations.Scale(float, int) VisualElement.ITransitionAnimations.Position(Vector3, int) VisualElement.ITransitionAnimations.Rotation(Quaternion, int) VisualElement.DirtyNextParentWithEventCallback() VisualElement.SetAsNextParentWithEventCallback() VisualElement.GetCachedNextParentWithEventCallback(out VisualElement) VisualElement.PropagateCachedNextParentWithEventCallback(VisualElement, VisualElement) VisualElement.UpdateCallbackParentCategories() VisualElement.HasEventCallbacks(EventCategory) VisualElement.HasParentEventCallbacks(EventCategory) VisualElement.HasParentEventCallbacksOrDefaultActions(EventCategory) VisualElement.HasEventCallbacksOrDefaultActions(EventCategory) VisualElement.HasParentEventCallbacksOrDefaultActionAtTarget(EventCategory) VisualElement.HasEventCallbacksOrDefaultActionAtTarget(EventCategory) VisualElement.HasDefaultAction(EventCategory) VisualElement.ShouldClip() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.ElementAtTreePath(List<int>) VisualElement.FindElementInTree(VisualElement, List<int>) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.GetFirstAncestorWhere(Predicate<VisualElement>) VisualElement.Contains(VisualElement) VisualElement.GatherAllChildren(List<VisualElement>) VisualElement.FindCommonAncestor(VisualElement) VisualElement.GetRoot() VisualElement.GetRootVisualContainer() VisualElement.GetNextElementDepthFirst() VisualElement.GetPreviousElementDepthFirst() VisualElement.RetargetElement(VisualElement) VisualElement.GetPivotedMatrixWithLayout(out Matrix4x4) VisualElement.Min(float, float, float, float) VisualElement.Max(float, float, float, float) VisualElement.TransformAlignedRectToParentSpace(ref Rect) VisualElement.CalculateConservativeRect(ref Matrix4x4, Rect) VisualElement.TransformAlignedRect(ref Matrix4x4, ref Rect) VisualElement.OrderMinMaxRect(ref Rect) VisualElement.MultiplyMatrix44Point2(ref Matrix4x4, Vector2) VisualElement.MultiplyVector2(ref Matrix4x4, Vector2) VisualElement.MultiplyMatrix44Rect2(ref Matrix4x4, Rect) VisualElement.MultiplyMatrix34(ref Matrix4x4, ref Matrix4x4, out Matrix4x4) VisualElement.TranslateMatrix34(ref Matrix4x4, Vector3, out Matrix4x4) VisualElement.TranslateMatrix34InPlace(ref Matrix4x4, Vector3) VisualElement.IVisualElementScheduler.Execute(Action<TimerState>) VisualElement.IVisualElementScheduler.Execute(Action) VisualElement.AddStyleSheetPath(string) VisualElement.HasStyleSheetPath(string) VisualElement.RemoveStyleSheetPath(string) VisualElement.ResolveLengthValue(Length, bool) VisualElement.ResolveTranslate() VisualElement.ResolveTransformOrigin() VisualElement.ResolveRotation() VisualElement.ResolveScale() VisualElement.GetOrCreateTypeData(Type) VisualElement.resolvedStyle VisualElement.IResolvedStyle.alignContent VisualElement.IResolvedStyle.alignItems VisualElement.IResolvedStyle.alignSelf VisualElement.IResolvedStyle.backgroundColor VisualElement.IResolvedStyle.backgroundImage VisualElement.IResolvedStyle.backgroundPositionX VisualElement.IResolvedStyle.backgroundPositionY VisualElement.IResolvedStyle.backgroundRepeat VisualElement.IResolvedStyle.backgroundSize VisualElement.IResolvedStyle.borderBottomColor VisualElement.IResolvedStyle.borderBottomLeftRadius VisualElement.IResolvedStyle.borderBottomRightRadius VisualElement.IResolvedStyle.borderBottomWidth VisualElement.IResolvedStyle.borderLeftColor VisualElement.IResolvedStyle.borderLeftWidth VisualElement.IResolvedStyle.borderRightColor VisualElement.IResolvedStyle.borderRightWidth VisualElement.IResolvedStyle.borderTopColor VisualElement.IResolvedStyle.borderTopLeftRadius VisualElement.IResolvedStyle.borderTopRightRadius VisualElement.IResolvedStyle.borderTopWidth VisualElement.IResolvedStyle.bottom VisualElement.IResolvedStyle.color VisualElement.IResolvedStyle.display VisualElement.IResolvedStyle.flexBasis VisualElement.IResolvedStyle.flexDirection VisualElement.IResolvedStyle.flexGrow VisualElement.IResolvedStyle.flexShrink VisualElement.IResolvedStyle.flexWrap VisualElement.IResolvedStyle.fontSize VisualElement.IResolvedStyle.height VisualElement.IResolvedStyle.justifyContent VisualElement.IResolvedStyle.left VisualElement.IResolvedStyle.letterSpacing VisualElement.IResolvedStyle.marginBottom VisualElement.IResolvedStyle.marginLeft VisualElement.IResolvedStyle.marginRight VisualElement.IResolvedStyle.marginTop VisualElement.IResolvedStyle.maxHeight VisualElement.IResolvedStyle.maxWidth VisualElement.IResolvedStyle.minHeight VisualElement.IResolvedStyle.minWidth VisualElement.IResolvedStyle.opacity VisualElement.IResolvedStyle.paddingBottom VisualElement.IResolvedStyle.paddingLeft VisualElement.IResolvedStyle.paddingRight VisualElement.IResolvedStyle.paddingTop VisualElement.IResolvedStyle.position VisualElement.IResolvedStyle.right VisualElement.IResolvedStyle.rotate VisualElement.IResolvedStyle.scale VisualElement.IResolvedStyle.textOverflow VisualElement.IResolvedStyle.top VisualElement.IResolvedStyle.transformOrigin VisualElement.IResolvedStyle.transitionDelay VisualElement.IResolvedStyle.transitionDuration VisualElement.IResolvedStyle.transitionProperty VisualElement.IResolvedStyle.transitionTimingFunction VisualElement.IResolvedStyle.translate VisualElement.IResolvedStyle.unityBackgroundImageTintColor VisualElement.IResolvedStyle.unityFont VisualElement.IResolvedStyle.unityFontDefinition VisualElement.IResolvedStyle.unityFontStyleAndWeight VisualElement.IResolvedStyle.unityParagraphSpacing VisualElement.IResolvedStyle.unitySliceBottom VisualElement.IResolvedStyle.unitySliceLeft VisualElement.IResolvedStyle.unitySliceRight VisualElement.IResolvedStyle.unitySliceScale VisualElement.IResolvedStyle.unitySliceTop VisualElement.IResolvedStyle.unityTextAlign VisualElement.IResolvedStyle.unityTextOutlineColor VisualElement.IResolvedStyle.unityTextOutlineWidth VisualElement.IResolvedStyle.unityTextOverflowPosition VisualElement.IResolvedStyle.visibility VisualElement.IResolvedStyle.whiteSpace VisualElement.IResolvedStyle.width VisualElement.IResolvedStyle.wordSpacing VisualElement.hasRunningAnimations VisualElement.hasCompletedAnimations VisualElement.IStylePropertyAnimations.runningAnimationCount VisualElement.IStylePropertyAnimations.completedAnimationCount VisualElement.styleAnimation VisualElement.isCompositeRoot VisualElement.isHierarchyDisplayed VisualElement.viewDataKey VisualElement.enableViewDataPersistence VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.renderHints VisualElement.transform VisualElement.ITransform.position VisualElement.ITransform.rotation VisualElement.ITransform.scale VisualElement.ITransform.matrix VisualElement.isLayoutManual VisualElement.scaledPixelsPerPoint VisualElement.IResolvedStyle.unityBackgroundScaleMode VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.isBoundingBoxDirty VisualElement.isWorldBoundingBoxDirty VisualElement.isWorldBoundingBoxOrDependenciesDirty VisualElement.boundingBox VisualElement.worldBoundingBox VisualElement.boundingBoxInParentSpace VisualElement.worldBound VisualElement.localBound VisualElement.rect VisualElement.isWorldTransformDirty VisualElement.isWorldTransformInverseDirty VisualElement.isWorldTransformInverseOrDependenciesDirty VisualElement.worldTransform VisualElement.worldTransformRef VisualElement.worldTransformInverse VisualElement.isWorldClipDirty VisualElement.worldClip VisualElement.worldClipMinusGroup VisualElement.worldClipIsInfinite VisualElement.pseudoStates VisualElement.containedPointerIds VisualElement.pickingMode VisualElement.name VisualElement.classList VisualElement.fullTypeName VisualElement.typeName VisualElement.yogaNode VisualElement.computedStyle VisualElement.hasInlineStyle VisualElement.styleInitialized VisualElement.opacity VisualElement.isParentEnabledInHierarchy VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.localLanguageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.requireMeasureFunction VisualElement.subRenderTargetMode VisualElement.defaultMaterial VisualElement.nextParentWithEventCallback VisualElement.eventCallbackCategories VisualElement.eventCallbackParentCategories VisualElement.isEventCallbackParentCategoriesDirty VisualElement.experimental VisualElement.IExperimentalFeatures.animation VisualElement.hierarchy VisualElement.isRootVisualContainer VisualElement.cacheAsBitmap VisualElement.disableClipping VisualElement.parent VisualElement.elementPanel VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.positionWithLayout VisualElement.hasDefaultRotationAndScale VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip VisualElement.typeData Focusable.m_DelegatesFocus Focusable.m_ExcludeFromFocusRing Focusable.Blur() Focusable.BlurImmediately() Focusable.GetFocusDelegate() Focusable.GetFirstFocusableChild(VisualElement) Focusable.ExecuteDefaultActionDisabled(EventBase) Focusable.ProcessEvent(EventBase) Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus Focusable.excludeFromFocusRing CallbackEventHandler.isIMGUIContainer CallbackEventHandler.m_CallbackRegistry CallbackEventHandler.ExecuteDefaultActionName CallbackEventHandler.ExecuteDefaultActionAtTargetName CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.AddEventCategories<TEventType>() CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, InvokePolicy, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.TryGetUserArgs<TEventType, TCallbackArgs>(EventCallback<TEventType, TCallbackArgs>, TrickleDown, out TCallbackArgs) CallbackEventHandler.HandleEventAtTargetPhase(EventBase) CallbackEventHandler.HandleEventAtTargetAndDefaultPhase(EventBase) CallbackEventHandler.HandleEventAtCurrentTargetAndPhase(EventBase) CallbackEventHandler.IEventHandler.HandleEvent(EventBase) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.ExecuteDefaultActionDisabledAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BoolSettingsUI(BoolSetting, ISettingHandler) Initializes a new instance of the BoolSettingsUI class. public BoolSettingsUI(BoolSetting setting, ISettingHandler settingHandler) Parameters setting BoolSetting The boolean setting to create the UI for. settingHandler ISettingHandler The setting handler to use."
  },
  "api/ContentSettings.API.Settings.DebugUI.IntSettingsUI.html": {
    "href": "api/ContentSettings.API.Settings.DebugUI.IntSettingsUI.html",
    "title": "Class IntSettingsUI | ConfigurableWarning Docs",
    "keywords": "Class IntSettingsUI Namespace ContentSettings.API.Settings.DebugUI Assembly RedstoneWizard08.ConfigurableWarning.dll The debug UI for an integer setting. public class IntSettingsUI : SettingUI, IEventHandler, IResolvedStyle, IStylePropertyAnimations, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Inheritance object CallbackEventHandler Focusable VisualElement SettingUI IntSettingsUI Implements IEventHandler IResolvedStyle IStylePropertyAnimations ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.s_NextId VisualElement.s_EmptyClassList VisualElement.userDataPropertyKey VisualElement.disabledUssClassName VisualElement.m_Name VisualElement.m_ClassList VisualElement.m_PropertyBag VisualElement.m_Flags VisualElement.m_ViewDataKey VisualElement.m_RenderHints VisualElement.lastLayout VisualElement.lastPseudoPadding VisualElement.renderChainData VisualElement.m_Layout VisualElement.m_BoundingBox VisualElement.worldBoundingBoxDirtyDependencies VisualElement.m_WorldBoundingBox VisualElement.worldTransformInverseDirtyDependencies VisualElement.m_WorldTransformCache VisualElement.m_WorldTransformInverseCache VisualElement.m_WorldClip VisualElement.m_WorldClipMinusGroup VisualElement.m_WorldClipIsInfinite VisualElement.s_InfiniteRect VisualElement.triggerPseudoMask VisualElement.dependencyPseudoMask VisualElement.m_PseudoStates VisualElement.m_Style VisualElement.variableContext VisualElement.inheritedStylesHash VisualElement.controlid VisualElement.imguiContainerDescendantCount VisualElement.m_LanguageDirection VisualElement.m_LocalLanguageDirection VisualElement.k_GenerateVisualContentMarker VisualElement.m_SubRenderTargetMode VisualElement.s_runtimeMaterial VisualElement.m_defaultMaterial VisualElement.m_RunningAnimations VisualElement.s_NextParentVersion VisualElement.m_NextParentCachedVersion VisualElement.m_NextParentRequiredVersion VisualElement.m_CachedNextParentWithEventCallback VisualElement.m_EventCallbackCategories VisualElement.m_CachedEventCallbackParentCategories VisualElement.m_DefaultActionEventCategories VisualElement.m_DefaultActionAtTargetEventCategories VisualElement.k_RootVisualContainerName VisualElement.m_PhysicalParent VisualElement.m_LogicalParent VisualElement.s_EmptyList VisualElement.m_Children VisualElement.m_VisualTreeAssetSource VisualElement.s_CustomStyleAccess VisualElement.inlineStyleAccess VisualElement.styleSheetList VisualElement.s_InternalStyleSheetPath VisualElement.tooltipPropertyKey VisualElement.s_TypeData VisualElement.m_TypeData VisualElement.GetStylePropertyAnimationSystem() VisualElement.IStylePropertyAnimations.Start(StylePropertyId, float, float, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, int, int, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Length, Length, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Color, Color, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.StartEnum(StylePropertyId, int, int, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Background, Background, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, FontDefinition, FontDefinition, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Font, Font, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, TextShadow, TextShadow, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Scale, Scale, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Translate, Translate, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Rotate, Rotate, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, TransformOrigin, TransformOrigin, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundPosition, BackgroundPosition, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundRepeat, BackgroundRepeat, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundSize, BackgroundSize, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.CancelAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.CancelAllAnimations() VisualElement.IStylePropertyAnimations.HasRunningAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.UpdateAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.GetAllAnimations(List<StylePropertyId>) VisualElement.TryConvertLengthUnits(StylePropertyId, ref Length, ref Length, int) VisualElement.TryConvertTransformOriginUnits(ref TransformOrigin, ref TransformOrigin) VisualElement.TryConvertTranslateUnits(ref Translate, ref Translate) VisualElement.TryConvertBackgroundPositionUnits(ref BackgroundPosition, ref BackgroundPosition) VisualElement.TryConvertBackgroundSizeUnits(ref BackgroundSize, ref BackgroundSize) VisualElement.GetParentSizeForLengthConversion(StylePropertyId, int) VisualElement.MarkRenderHintsClean() VisualElement.ClearManualLayout() VisualElement.UpdateBoundingBox() VisualElement.UpdateWorldBoundingBox() VisualElement.UpdateWorldTransform() VisualElement.UpdateWorldTransformInverse() VisualElement.EnsureWorldTransformAndClipUpToDate() VisualElement.UpdateWorldClip() VisualElement.CombineClipRects(Rect, Rect) VisualElement.SubstractBorderPadding(Rect) VisualElement.ComputeAAAlignedBound(Rect, Matrix4x4) VisualElement.UpdateHoverPseudoState() VisualElement.IsPartOfCapturedChain(VisualElement, in IEventHandler) VisualElement.ChangeIMGUIContainerCount(int) VisualElement.ExecuteDefaultAction(EventBase) VisualElement.GetTooltipRect() VisualElement.SetTooltip(TooltipEvent) VisualElement.Focus() VisualElement.SetPanel(BaseVisualElementPanel) VisualElement.WillChangePanel(BaseVisualElementPanel) VisualElement.HasChangedPanel(BaseVisualElementPanel) VisualElement.SendEvent(EventBase) VisualElement.SendEvent(EventBase, DispatchMode) VisualElement.IncrementVersion(VersionChangeType) VisualElement.InvokeHierarchyChanged(HierarchyChangeType) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabledFromHierarchyPrivate(bool) VisualElement.SetEnabled(bool) VisualElement.PropagateEnabledToChildren(bool) VisualElement.MarkDirtyRepaint() VisualElement.InvokeGenerateVisualContent(MeshGenerationContext) VisualElement.GetFullHierarchicalViewDataKey(StringBuilder) VisualElement.GetFullHierarchicalViewDataKey() VisualElement.GetOrCreateViewData<T>(object, string) VisualElement.GetOrCreateViewData<T>(ScriptableObject, string) VisualElement.OverwriteFromViewData(object, string) VisualElement.SaveViewData() VisualElement.IsViewDataPersitenceSupportedOnChildren(bool) VisualElement.OnViewDataReady(bool) VisualElement.OnViewDataReady() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.AssignMeasureFunction() VisualElement.RemoveMeasureFunction() VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.Measure(YogaNode, float, YogaMeasureMode, float, YogaMeasureMode) VisualElement.SetSize(Vector2) VisualElement.FinalizeLayout() VisualElement.SetInlineRule(StyleSheet, StyleRule) VisualElement.UpdateInlineRule(StyleSheet, StyleRule) VisualElement.SetComputedStyle(ref ComputedStyle) VisualElement.ResetPositionProperties() VisualElement.ToString() VisualElement.GetClasses() VisualElement.GetClassesForIteration() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.GetProperty(PropertyName) VisualElement.SetProperty(PropertyName, object) VisualElement.HasProperty(PropertyName) VisualElement.TryGetPropertyInternal(PropertyName, out object) VisualElement.CheckUserKeyArgument(PropertyName) VisualElement.SetPropertyInternal(PropertyName, object) VisualElement.UpdateCursorStyle(long) VisualElement.getRuntimeMaterial() VisualElement.GetAnimationSystem() VisualElement.RegisterAnimation(IValueAnimationUpdate) VisualElement.UnregisterAnimation(IValueAnimationUpdate) VisualElement.UnregisterRunningAnimations() VisualElement.RegisterRunningAnimations() VisualElement.ITransitionAnimations.Start(float, float, int, Action<VisualElement, float>) VisualElement.ITransitionAnimations.Start(Rect, Rect, int, Action<VisualElement, Rect>) VisualElement.ITransitionAnimations.Start(Color, Color, int, Action<VisualElement, Color>) VisualElement.ITransitionAnimations.Start(Vector3, Vector3, int, Action<VisualElement, Vector3>) VisualElement.ITransitionAnimations.Start(Vector2, Vector2, int, Action<VisualElement, Vector2>) VisualElement.ITransitionAnimations.Start(Quaternion, Quaternion, int, Action<VisualElement, Quaternion>) VisualElement.ITransitionAnimations.Start(StyleValues, StyleValues, int) VisualElement.ITransitionAnimations.Start(Func<VisualElement, float>, float, int, Action<VisualElement, float>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Rect>, Rect, int, Action<VisualElement, Rect>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Color>, Color, int, Action<VisualElement, Color>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Vector3>, Vector3, int, Action<VisualElement, Vector3>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Vector2>, Vector2, int, Action<VisualElement, Vector2>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Quaternion>, Quaternion, int, Action<VisualElement, Quaternion>) VisualElement.StartAnimation<T>(ValueAnimation<T>, Func<VisualElement, T>, T, int, Action<VisualElement, T>) VisualElement.AssignStyleValues(VisualElement, StyleValues) VisualElement.ReadCurrentValues(VisualElement, StyleValues) VisualElement.ITransitionAnimations.Start(StyleValues, int) VisualElement.Start(Func<VisualElement, StyleValues>, StyleValues, int) VisualElement.ITransitionAnimations.Layout(Rect, int) VisualElement.ITransitionAnimations.TopLeft(Vector2, int) VisualElement.ITransitionAnimations.Size(Vector2, int) VisualElement.ITransitionAnimations.Scale(float, int) VisualElement.ITransitionAnimations.Position(Vector3, int) VisualElement.ITransitionAnimations.Rotation(Quaternion, int) VisualElement.DirtyNextParentWithEventCallback() VisualElement.SetAsNextParentWithEventCallback() VisualElement.GetCachedNextParentWithEventCallback(out VisualElement) VisualElement.PropagateCachedNextParentWithEventCallback(VisualElement, VisualElement) VisualElement.UpdateCallbackParentCategories() VisualElement.HasEventCallbacks(EventCategory) VisualElement.HasParentEventCallbacks(EventCategory) VisualElement.HasParentEventCallbacksOrDefaultActions(EventCategory) VisualElement.HasEventCallbacksOrDefaultActions(EventCategory) VisualElement.HasParentEventCallbacksOrDefaultActionAtTarget(EventCategory) VisualElement.HasEventCallbacksOrDefaultActionAtTarget(EventCategory) VisualElement.HasDefaultAction(EventCategory) VisualElement.ShouldClip() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.ElementAtTreePath(List<int>) VisualElement.FindElementInTree(VisualElement, List<int>) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.GetFirstAncestorWhere(Predicate<VisualElement>) VisualElement.Contains(VisualElement) VisualElement.GatherAllChildren(List<VisualElement>) VisualElement.FindCommonAncestor(VisualElement) VisualElement.GetRoot() VisualElement.GetRootVisualContainer() VisualElement.GetNextElementDepthFirst() VisualElement.GetPreviousElementDepthFirst() VisualElement.RetargetElement(VisualElement) VisualElement.GetPivotedMatrixWithLayout(out Matrix4x4) VisualElement.Min(float, float, float, float) VisualElement.Max(float, float, float, float) VisualElement.TransformAlignedRectToParentSpace(ref Rect) VisualElement.CalculateConservativeRect(ref Matrix4x4, Rect) VisualElement.TransformAlignedRect(ref Matrix4x4, ref Rect) VisualElement.OrderMinMaxRect(ref Rect) VisualElement.MultiplyMatrix44Point2(ref Matrix4x4, Vector2) VisualElement.MultiplyVector2(ref Matrix4x4, Vector2) VisualElement.MultiplyMatrix44Rect2(ref Matrix4x4, Rect) VisualElement.MultiplyMatrix34(ref Matrix4x4, ref Matrix4x4, out Matrix4x4) VisualElement.TranslateMatrix34(ref Matrix4x4, Vector3, out Matrix4x4) VisualElement.TranslateMatrix34InPlace(ref Matrix4x4, Vector3) VisualElement.IVisualElementScheduler.Execute(Action<TimerState>) VisualElement.IVisualElementScheduler.Execute(Action) VisualElement.AddStyleSheetPath(string) VisualElement.HasStyleSheetPath(string) VisualElement.RemoveStyleSheetPath(string) VisualElement.ResolveLengthValue(Length, bool) VisualElement.ResolveTranslate() VisualElement.ResolveTransformOrigin() VisualElement.ResolveRotation() VisualElement.ResolveScale() VisualElement.GetOrCreateTypeData(Type) VisualElement.resolvedStyle VisualElement.IResolvedStyle.alignContent VisualElement.IResolvedStyle.alignItems VisualElement.IResolvedStyle.alignSelf VisualElement.IResolvedStyle.backgroundColor VisualElement.IResolvedStyle.backgroundImage VisualElement.IResolvedStyle.backgroundPositionX VisualElement.IResolvedStyle.backgroundPositionY VisualElement.IResolvedStyle.backgroundRepeat VisualElement.IResolvedStyle.backgroundSize VisualElement.IResolvedStyle.borderBottomColor VisualElement.IResolvedStyle.borderBottomLeftRadius VisualElement.IResolvedStyle.borderBottomRightRadius VisualElement.IResolvedStyle.borderBottomWidth VisualElement.IResolvedStyle.borderLeftColor VisualElement.IResolvedStyle.borderLeftWidth VisualElement.IResolvedStyle.borderRightColor VisualElement.IResolvedStyle.borderRightWidth VisualElement.IResolvedStyle.borderTopColor VisualElement.IResolvedStyle.borderTopLeftRadius VisualElement.IResolvedStyle.borderTopRightRadius VisualElement.IResolvedStyle.borderTopWidth VisualElement.IResolvedStyle.bottom VisualElement.IResolvedStyle.color VisualElement.IResolvedStyle.display VisualElement.IResolvedStyle.flexBasis VisualElement.IResolvedStyle.flexDirection VisualElement.IResolvedStyle.flexGrow VisualElement.IResolvedStyle.flexShrink VisualElement.IResolvedStyle.flexWrap VisualElement.IResolvedStyle.fontSize VisualElement.IResolvedStyle.height VisualElement.IResolvedStyle.justifyContent VisualElement.IResolvedStyle.left VisualElement.IResolvedStyle.letterSpacing VisualElement.IResolvedStyle.marginBottom VisualElement.IResolvedStyle.marginLeft VisualElement.IResolvedStyle.marginRight VisualElement.IResolvedStyle.marginTop VisualElement.IResolvedStyle.maxHeight VisualElement.IResolvedStyle.maxWidth VisualElement.IResolvedStyle.minHeight VisualElement.IResolvedStyle.minWidth VisualElement.IResolvedStyle.opacity VisualElement.IResolvedStyle.paddingBottom VisualElement.IResolvedStyle.paddingLeft VisualElement.IResolvedStyle.paddingRight VisualElement.IResolvedStyle.paddingTop VisualElement.IResolvedStyle.position VisualElement.IResolvedStyle.right VisualElement.IResolvedStyle.rotate VisualElement.IResolvedStyle.scale VisualElement.IResolvedStyle.textOverflow VisualElement.IResolvedStyle.top VisualElement.IResolvedStyle.transformOrigin VisualElement.IResolvedStyle.transitionDelay VisualElement.IResolvedStyle.transitionDuration VisualElement.IResolvedStyle.transitionProperty VisualElement.IResolvedStyle.transitionTimingFunction VisualElement.IResolvedStyle.translate VisualElement.IResolvedStyle.unityBackgroundImageTintColor VisualElement.IResolvedStyle.unityFont VisualElement.IResolvedStyle.unityFontDefinition VisualElement.IResolvedStyle.unityFontStyleAndWeight VisualElement.IResolvedStyle.unityParagraphSpacing VisualElement.IResolvedStyle.unitySliceBottom VisualElement.IResolvedStyle.unitySliceLeft VisualElement.IResolvedStyle.unitySliceRight VisualElement.IResolvedStyle.unitySliceScale VisualElement.IResolvedStyle.unitySliceTop VisualElement.IResolvedStyle.unityTextAlign VisualElement.IResolvedStyle.unityTextOutlineColor VisualElement.IResolvedStyle.unityTextOutlineWidth VisualElement.IResolvedStyle.unityTextOverflowPosition VisualElement.IResolvedStyle.visibility VisualElement.IResolvedStyle.whiteSpace VisualElement.IResolvedStyle.width VisualElement.IResolvedStyle.wordSpacing VisualElement.hasRunningAnimations VisualElement.hasCompletedAnimations VisualElement.IStylePropertyAnimations.runningAnimationCount VisualElement.IStylePropertyAnimations.completedAnimationCount VisualElement.styleAnimation VisualElement.isCompositeRoot VisualElement.isHierarchyDisplayed VisualElement.viewDataKey VisualElement.enableViewDataPersistence VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.renderHints VisualElement.transform VisualElement.ITransform.position VisualElement.ITransform.rotation VisualElement.ITransform.scale VisualElement.ITransform.matrix VisualElement.isLayoutManual VisualElement.scaledPixelsPerPoint VisualElement.IResolvedStyle.unityBackgroundScaleMode VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.isBoundingBoxDirty VisualElement.isWorldBoundingBoxDirty VisualElement.isWorldBoundingBoxOrDependenciesDirty VisualElement.boundingBox VisualElement.worldBoundingBox VisualElement.boundingBoxInParentSpace VisualElement.worldBound VisualElement.localBound VisualElement.rect VisualElement.isWorldTransformDirty VisualElement.isWorldTransformInverseDirty VisualElement.isWorldTransformInverseOrDependenciesDirty VisualElement.worldTransform VisualElement.worldTransformRef VisualElement.worldTransformInverse VisualElement.isWorldClipDirty VisualElement.worldClip VisualElement.worldClipMinusGroup VisualElement.worldClipIsInfinite VisualElement.pseudoStates VisualElement.containedPointerIds VisualElement.pickingMode VisualElement.name VisualElement.classList VisualElement.fullTypeName VisualElement.typeName VisualElement.yogaNode VisualElement.computedStyle VisualElement.hasInlineStyle VisualElement.styleInitialized VisualElement.opacity VisualElement.isParentEnabledInHierarchy VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.localLanguageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.requireMeasureFunction VisualElement.subRenderTargetMode VisualElement.defaultMaterial VisualElement.nextParentWithEventCallback VisualElement.eventCallbackCategories VisualElement.eventCallbackParentCategories VisualElement.isEventCallbackParentCategoriesDirty VisualElement.experimental VisualElement.IExperimentalFeatures.animation VisualElement.hierarchy VisualElement.isRootVisualContainer VisualElement.cacheAsBitmap VisualElement.disableClipping VisualElement.parent VisualElement.elementPanel VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.positionWithLayout VisualElement.hasDefaultRotationAndScale VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip VisualElement.typeData Focusable.m_DelegatesFocus Focusable.m_ExcludeFromFocusRing Focusable.Blur() Focusable.BlurImmediately() Focusable.GetFocusDelegate() Focusable.GetFirstFocusableChild(VisualElement) Focusable.ExecuteDefaultActionDisabled(EventBase) Focusable.ProcessEvent(EventBase) Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus Focusable.excludeFromFocusRing CallbackEventHandler.isIMGUIContainer CallbackEventHandler.m_CallbackRegistry CallbackEventHandler.ExecuteDefaultActionName CallbackEventHandler.ExecuteDefaultActionAtTargetName CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.AddEventCategories<TEventType>() CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, InvokePolicy, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.TryGetUserArgs<TEventType, TCallbackArgs>(EventCallback<TEventType, TCallbackArgs>, TrickleDown, out TCallbackArgs) CallbackEventHandler.HandleEventAtTargetPhase(EventBase) CallbackEventHandler.HandleEventAtTargetAndDefaultPhase(EventBase) CallbackEventHandler.HandleEventAtCurrentTargetAndPhase(EventBase) CallbackEventHandler.IEventHandler.HandleEvent(EventBase) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.ExecuteDefaultActionDisabledAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntSettingsUI(IntSetting, ISettingHandler) Initializes a new instance of the IntSettingsUI class. public IntSettingsUI(IntSetting setting, ISettingHandler settingHandler) Parameters setting IntSetting The integer setting to create the UI for. settingHandler ISettingHandler The setting handler to use."
  },
  "api/ContentSettings.API.Settings.DebugUI.TextSettingsUI.html": {
    "href": "api/ContentSettings.API.Settings.DebugUI.TextSettingsUI.html",
    "title": "Class TextSettingsUI | ConfigurableWarning Docs",
    "keywords": "Class TextSettingsUI Namespace ContentSettings.API.Settings.DebugUI Assembly RedstoneWizard08.ConfigurableWarning.dll The debug UI for a text setting. public class TextSettingsUI : SettingUI, IEventHandler, IResolvedStyle, IStylePropertyAnimations, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Inheritance object CallbackEventHandler Focusable VisualElement SettingUI TextSettingsUI Implements IEventHandler IResolvedStyle IStylePropertyAnimations ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.s_NextId VisualElement.s_EmptyClassList VisualElement.userDataPropertyKey VisualElement.disabledUssClassName VisualElement.m_Name VisualElement.m_ClassList VisualElement.m_PropertyBag VisualElement.m_Flags VisualElement.m_ViewDataKey VisualElement.m_RenderHints VisualElement.lastLayout VisualElement.lastPseudoPadding VisualElement.renderChainData VisualElement.m_Layout VisualElement.m_BoundingBox VisualElement.worldBoundingBoxDirtyDependencies VisualElement.m_WorldBoundingBox VisualElement.worldTransformInverseDirtyDependencies VisualElement.m_WorldTransformCache VisualElement.m_WorldTransformInverseCache VisualElement.m_WorldClip VisualElement.m_WorldClipMinusGroup VisualElement.m_WorldClipIsInfinite VisualElement.s_InfiniteRect VisualElement.triggerPseudoMask VisualElement.dependencyPseudoMask VisualElement.m_PseudoStates VisualElement.m_Style VisualElement.variableContext VisualElement.inheritedStylesHash VisualElement.controlid VisualElement.imguiContainerDescendantCount VisualElement.m_LanguageDirection VisualElement.m_LocalLanguageDirection VisualElement.k_GenerateVisualContentMarker VisualElement.m_SubRenderTargetMode VisualElement.s_runtimeMaterial VisualElement.m_defaultMaterial VisualElement.m_RunningAnimations VisualElement.s_NextParentVersion VisualElement.m_NextParentCachedVersion VisualElement.m_NextParentRequiredVersion VisualElement.m_CachedNextParentWithEventCallback VisualElement.m_EventCallbackCategories VisualElement.m_CachedEventCallbackParentCategories VisualElement.m_DefaultActionEventCategories VisualElement.m_DefaultActionAtTargetEventCategories VisualElement.k_RootVisualContainerName VisualElement.m_PhysicalParent VisualElement.m_LogicalParent VisualElement.s_EmptyList VisualElement.m_Children VisualElement.m_VisualTreeAssetSource VisualElement.s_CustomStyleAccess VisualElement.inlineStyleAccess VisualElement.styleSheetList VisualElement.s_InternalStyleSheetPath VisualElement.tooltipPropertyKey VisualElement.s_TypeData VisualElement.m_TypeData VisualElement.GetStylePropertyAnimationSystem() VisualElement.IStylePropertyAnimations.Start(StylePropertyId, float, float, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, int, int, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Length, Length, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Color, Color, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.StartEnum(StylePropertyId, int, int, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Background, Background, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, FontDefinition, FontDefinition, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Font, Font, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, TextShadow, TextShadow, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Scale, Scale, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Translate, Translate, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, Rotate, Rotate, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, TransformOrigin, TransformOrigin, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundPosition, BackgroundPosition, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundRepeat, BackgroundRepeat, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.Start(StylePropertyId, BackgroundSize, BackgroundSize, int, int, Func<float, float>) VisualElement.IStylePropertyAnimations.CancelAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.CancelAllAnimations() VisualElement.IStylePropertyAnimations.HasRunningAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.UpdateAnimation(StylePropertyId) VisualElement.IStylePropertyAnimations.GetAllAnimations(List<StylePropertyId>) VisualElement.TryConvertLengthUnits(StylePropertyId, ref Length, ref Length, int) VisualElement.TryConvertTransformOriginUnits(ref TransformOrigin, ref TransformOrigin) VisualElement.TryConvertTranslateUnits(ref Translate, ref Translate) VisualElement.TryConvertBackgroundPositionUnits(ref BackgroundPosition, ref BackgroundPosition) VisualElement.TryConvertBackgroundSizeUnits(ref BackgroundSize, ref BackgroundSize) VisualElement.GetParentSizeForLengthConversion(StylePropertyId, int) VisualElement.MarkRenderHintsClean() VisualElement.ClearManualLayout() VisualElement.UpdateBoundingBox() VisualElement.UpdateWorldBoundingBox() VisualElement.UpdateWorldTransform() VisualElement.UpdateWorldTransformInverse() VisualElement.EnsureWorldTransformAndClipUpToDate() VisualElement.UpdateWorldClip() VisualElement.CombineClipRects(Rect, Rect) VisualElement.SubstractBorderPadding(Rect) VisualElement.ComputeAAAlignedBound(Rect, Matrix4x4) VisualElement.UpdateHoverPseudoState() VisualElement.IsPartOfCapturedChain(VisualElement, in IEventHandler) VisualElement.ChangeIMGUIContainerCount(int) VisualElement.ExecuteDefaultAction(EventBase) VisualElement.GetTooltipRect() VisualElement.SetTooltip(TooltipEvent) VisualElement.Focus() VisualElement.SetPanel(BaseVisualElementPanel) VisualElement.WillChangePanel(BaseVisualElementPanel) VisualElement.HasChangedPanel(BaseVisualElementPanel) VisualElement.SendEvent(EventBase) VisualElement.SendEvent(EventBase, DispatchMode) VisualElement.IncrementVersion(VersionChangeType) VisualElement.InvokeHierarchyChanged(HierarchyChangeType) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabledFromHierarchyPrivate(bool) VisualElement.SetEnabled(bool) VisualElement.PropagateEnabledToChildren(bool) VisualElement.MarkDirtyRepaint() VisualElement.InvokeGenerateVisualContent(MeshGenerationContext) VisualElement.GetFullHierarchicalViewDataKey(StringBuilder) VisualElement.GetFullHierarchicalViewDataKey() VisualElement.GetOrCreateViewData<T>(object, string) VisualElement.GetOrCreateViewData<T>(ScriptableObject, string) VisualElement.OverwriteFromViewData(object, string) VisualElement.SaveViewData() VisualElement.IsViewDataPersitenceSupportedOnChildren(bool) VisualElement.OnViewDataReady(bool) VisualElement.OnViewDataReady() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.AssignMeasureFunction() VisualElement.RemoveMeasureFunction() VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.Measure(YogaNode, float, YogaMeasureMode, float, YogaMeasureMode) VisualElement.SetSize(Vector2) VisualElement.FinalizeLayout() VisualElement.SetInlineRule(StyleSheet, StyleRule) VisualElement.UpdateInlineRule(StyleSheet, StyleRule) VisualElement.SetComputedStyle(ref ComputedStyle) VisualElement.ResetPositionProperties() VisualElement.ToString() VisualElement.GetClasses() VisualElement.GetClassesForIteration() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.GetProperty(PropertyName) VisualElement.SetProperty(PropertyName, object) VisualElement.HasProperty(PropertyName) VisualElement.TryGetPropertyInternal(PropertyName, out object) VisualElement.CheckUserKeyArgument(PropertyName) VisualElement.SetPropertyInternal(PropertyName, object) VisualElement.UpdateCursorStyle(long) VisualElement.getRuntimeMaterial() VisualElement.GetAnimationSystem() VisualElement.RegisterAnimation(IValueAnimationUpdate) VisualElement.UnregisterAnimation(IValueAnimationUpdate) VisualElement.UnregisterRunningAnimations() VisualElement.RegisterRunningAnimations() VisualElement.ITransitionAnimations.Start(float, float, int, Action<VisualElement, float>) VisualElement.ITransitionAnimations.Start(Rect, Rect, int, Action<VisualElement, Rect>) VisualElement.ITransitionAnimations.Start(Color, Color, int, Action<VisualElement, Color>) VisualElement.ITransitionAnimations.Start(Vector3, Vector3, int, Action<VisualElement, Vector3>) VisualElement.ITransitionAnimations.Start(Vector2, Vector2, int, Action<VisualElement, Vector2>) VisualElement.ITransitionAnimations.Start(Quaternion, Quaternion, int, Action<VisualElement, Quaternion>) VisualElement.ITransitionAnimations.Start(StyleValues, StyleValues, int) VisualElement.ITransitionAnimations.Start(Func<VisualElement, float>, float, int, Action<VisualElement, float>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Rect>, Rect, int, Action<VisualElement, Rect>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Color>, Color, int, Action<VisualElement, Color>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Vector3>, Vector3, int, Action<VisualElement, Vector3>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Vector2>, Vector2, int, Action<VisualElement, Vector2>) VisualElement.ITransitionAnimations.Start(Func<VisualElement, Quaternion>, Quaternion, int, Action<VisualElement, Quaternion>) VisualElement.StartAnimation<T>(ValueAnimation<T>, Func<VisualElement, T>, T, int, Action<VisualElement, T>) VisualElement.AssignStyleValues(VisualElement, StyleValues) VisualElement.ReadCurrentValues(VisualElement, StyleValues) VisualElement.ITransitionAnimations.Start(StyleValues, int) VisualElement.Start(Func<VisualElement, StyleValues>, StyleValues, int) VisualElement.ITransitionAnimations.Layout(Rect, int) VisualElement.ITransitionAnimations.TopLeft(Vector2, int) VisualElement.ITransitionAnimations.Size(Vector2, int) VisualElement.ITransitionAnimations.Scale(float, int) VisualElement.ITransitionAnimations.Position(Vector3, int) VisualElement.ITransitionAnimations.Rotation(Quaternion, int) VisualElement.DirtyNextParentWithEventCallback() VisualElement.SetAsNextParentWithEventCallback() VisualElement.GetCachedNextParentWithEventCallback(out VisualElement) VisualElement.PropagateCachedNextParentWithEventCallback(VisualElement, VisualElement) VisualElement.UpdateCallbackParentCategories() VisualElement.HasEventCallbacks(EventCategory) VisualElement.HasParentEventCallbacks(EventCategory) VisualElement.HasParentEventCallbacksOrDefaultActions(EventCategory) VisualElement.HasEventCallbacksOrDefaultActions(EventCategory) VisualElement.HasParentEventCallbacksOrDefaultActionAtTarget(EventCategory) VisualElement.HasEventCallbacksOrDefaultActionAtTarget(EventCategory) VisualElement.HasDefaultAction(EventCategory) VisualElement.ShouldClip() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.ElementAtTreePath(List<int>) VisualElement.FindElementInTree(VisualElement, List<int>) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.GetFirstAncestorWhere(Predicate<VisualElement>) VisualElement.Contains(VisualElement) VisualElement.GatherAllChildren(List<VisualElement>) VisualElement.FindCommonAncestor(VisualElement) VisualElement.GetRoot() VisualElement.GetRootVisualContainer() VisualElement.GetNextElementDepthFirst() VisualElement.GetPreviousElementDepthFirst() VisualElement.RetargetElement(VisualElement) VisualElement.GetPivotedMatrixWithLayout(out Matrix4x4) VisualElement.Min(float, float, float, float) VisualElement.Max(float, float, float, float) VisualElement.TransformAlignedRectToParentSpace(ref Rect) VisualElement.CalculateConservativeRect(ref Matrix4x4, Rect) VisualElement.TransformAlignedRect(ref Matrix4x4, ref Rect) VisualElement.OrderMinMaxRect(ref Rect) VisualElement.MultiplyMatrix44Point2(ref Matrix4x4, Vector2) VisualElement.MultiplyVector2(ref Matrix4x4, Vector2) VisualElement.MultiplyMatrix44Rect2(ref Matrix4x4, Rect) VisualElement.MultiplyMatrix34(ref Matrix4x4, ref Matrix4x4, out Matrix4x4) VisualElement.TranslateMatrix34(ref Matrix4x4, Vector3, out Matrix4x4) VisualElement.TranslateMatrix34InPlace(ref Matrix4x4, Vector3) VisualElement.IVisualElementScheduler.Execute(Action<TimerState>) VisualElement.IVisualElementScheduler.Execute(Action) VisualElement.AddStyleSheetPath(string) VisualElement.HasStyleSheetPath(string) VisualElement.RemoveStyleSheetPath(string) VisualElement.ResolveLengthValue(Length, bool) VisualElement.ResolveTranslate() VisualElement.ResolveTransformOrigin() VisualElement.ResolveRotation() VisualElement.ResolveScale() VisualElement.GetOrCreateTypeData(Type) VisualElement.resolvedStyle VisualElement.IResolvedStyle.alignContent VisualElement.IResolvedStyle.alignItems VisualElement.IResolvedStyle.alignSelf VisualElement.IResolvedStyle.backgroundColor VisualElement.IResolvedStyle.backgroundImage VisualElement.IResolvedStyle.backgroundPositionX VisualElement.IResolvedStyle.backgroundPositionY VisualElement.IResolvedStyle.backgroundRepeat VisualElement.IResolvedStyle.backgroundSize VisualElement.IResolvedStyle.borderBottomColor VisualElement.IResolvedStyle.borderBottomLeftRadius VisualElement.IResolvedStyle.borderBottomRightRadius VisualElement.IResolvedStyle.borderBottomWidth VisualElement.IResolvedStyle.borderLeftColor VisualElement.IResolvedStyle.borderLeftWidth VisualElement.IResolvedStyle.borderRightColor VisualElement.IResolvedStyle.borderRightWidth VisualElement.IResolvedStyle.borderTopColor VisualElement.IResolvedStyle.borderTopLeftRadius VisualElement.IResolvedStyle.borderTopRightRadius VisualElement.IResolvedStyle.borderTopWidth VisualElement.IResolvedStyle.bottom VisualElement.IResolvedStyle.color VisualElement.IResolvedStyle.display VisualElement.IResolvedStyle.flexBasis VisualElement.IResolvedStyle.flexDirection VisualElement.IResolvedStyle.flexGrow VisualElement.IResolvedStyle.flexShrink VisualElement.IResolvedStyle.flexWrap VisualElement.IResolvedStyle.fontSize VisualElement.IResolvedStyle.height VisualElement.IResolvedStyle.justifyContent VisualElement.IResolvedStyle.left VisualElement.IResolvedStyle.letterSpacing VisualElement.IResolvedStyle.marginBottom VisualElement.IResolvedStyle.marginLeft VisualElement.IResolvedStyle.marginRight VisualElement.IResolvedStyle.marginTop VisualElement.IResolvedStyle.maxHeight VisualElement.IResolvedStyle.maxWidth VisualElement.IResolvedStyle.minHeight VisualElement.IResolvedStyle.minWidth VisualElement.IResolvedStyle.opacity VisualElement.IResolvedStyle.paddingBottom VisualElement.IResolvedStyle.paddingLeft VisualElement.IResolvedStyle.paddingRight VisualElement.IResolvedStyle.paddingTop VisualElement.IResolvedStyle.position VisualElement.IResolvedStyle.right VisualElement.IResolvedStyle.rotate VisualElement.IResolvedStyle.scale VisualElement.IResolvedStyle.textOverflow VisualElement.IResolvedStyle.top VisualElement.IResolvedStyle.transformOrigin VisualElement.IResolvedStyle.transitionDelay VisualElement.IResolvedStyle.transitionDuration VisualElement.IResolvedStyle.transitionProperty VisualElement.IResolvedStyle.transitionTimingFunction VisualElement.IResolvedStyle.translate VisualElement.IResolvedStyle.unityBackgroundImageTintColor VisualElement.IResolvedStyle.unityFont VisualElement.IResolvedStyle.unityFontDefinition VisualElement.IResolvedStyle.unityFontStyleAndWeight VisualElement.IResolvedStyle.unityParagraphSpacing VisualElement.IResolvedStyle.unitySliceBottom VisualElement.IResolvedStyle.unitySliceLeft VisualElement.IResolvedStyle.unitySliceRight VisualElement.IResolvedStyle.unitySliceScale VisualElement.IResolvedStyle.unitySliceTop VisualElement.IResolvedStyle.unityTextAlign VisualElement.IResolvedStyle.unityTextOutlineColor VisualElement.IResolvedStyle.unityTextOutlineWidth VisualElement.IResolvedStyle.unityTextOverflowPosition VisualElement.IResolvedStyle.visibility VisualElement.IResolvedStyle.whiteSpace VisualElement.IResolvedStyle.width VisualElement.IResolvedStyle.wordSpacing VisualElement.hasRunningAnimations VisualElement.hasCompletedAnimations VisualElement.IStylePropertyAnimations.runningAnimationCount VisualElement.IStylePropertyAnimations.completedAnimationCount VisualElement.styleAnimation VisualElement.isCompositeRoot VisualElement.isHierarchyDisplayed VisualElement.viewDataKey VisualElement.enableViewDataPersistence VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.renderHints VisualElement.transform VisualElement.ITransform.position VisualElement.ITransform.rotation VisualElement.ITransform.scale VisualElement.ITransform.matrix VisualElement.isLayoutManual VisualElement.scaledPixelsPerPoint VisualElement.IResolvedStyle.unityBackgroundScaleMode VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.isBoundingBoxDirty VisualElement.isWorldBoundingBoxDirty VisualElement.isWorldBoundingBoxOrDependenciesDirty VisualElement.boundingBox VisualElement.worldBoundingBox VisualElement.boundingBoxInParentSpace VisualElement.worldBound VisualElement.localBound VisualElement.rect VisualElement.isWorldTransformDirty VisualElement.isWorldTransformInverseDirty VisualElement.isWorldTransformInverseOrDependenciesDirty VisualElement.worldTransform VisualElement.worldTransformRef VisualElement.worldTransformInverse VisualElement.isWorldClipDirty VisualElement.worldClip VisualElement.worldClipMinusGroup VisualElement.worldClipIsInfinite VisualElement.pseudoStates VisualElement.containedPointerIds VisualElement.pickingMode VisualElement.name VisualElement.classList VisualElement.fullTypeName VisualElement.typeName VisualElement.yogaNode VisualElement.computedStyle VisualElement.hasInlineStyle VisualElement.styleInitialized VisualElement.opacity VisualElement.isParentEnabledInHierarchy VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.localLanguageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.requireMeasureFunction VisualElement.subRenderTargetMode VisualElement.defaultMaterial VisualElement.nextParentWithEventCallback VisualElement.eventCallbackCategories VisualElement.eventCallbackParentCategories VisualElement.isEventCallbackParentCategoriesDirty VisualElement.experimental VisualElement.IExperimentalFeatures.animation VisualElement.hierarchy VisualElement.isRootVisualContainer VisualElement.cacheAsBitmap VisualElement.disableClipping VisualElement.parent VisualElement.elementPanel VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.positionWithLayout VisualElement.hasDefaultRotationAndScale VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip VisualElement.typeData Focusable.m_DelegatesFocus Focusable.m_ExcludeFromFocusRing Focusable.Blur() Focusable.BlurImmediately() Focusable.GetFocusDelegate() Focusable.GetFirstFocusableChild(VisualElement) Focusable.ExecuteDefaultActionDisabled(EventBase) Focusable.ProcessEvent(EventBase) Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus Focusable.excludeFromFocusRing CallbackEventHandler.isIMGUIContainer CallbackEventHandler.m_CallbackRegistry CallbackEventHandler.ExecuteDefaultActionName CallbackEventHandler.ExecuteDefaultActionAtTargetName CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.AddEventCategories<TEventType>() CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, InvokePolicy, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.TryGetUserArgs<TEventType, TCallbackArgs>(EventCallback<TEventType, TCallbackArgs>, TrickleDown, out TCallbackArgs) CallbackEventHandler.HandleEventAtTargetPhase(EventBase) CallbackEventHandler.HandleEventAtTargetAndDefaultPhase(EventBase) CallbackEventHandler.HandleEventAtCurrentTargetAndPhase(EventBase) CallbackEventHandler.IEventHandler.HandleEvent(EventBase) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.ExecuteDefaultActionDisabledAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextSettingsUI(TextSetting, ISettingHandler) Initializes a new instance of the TextSettingsUI class. public TextSettingsUI(TextSetting setting, ISettingHandler settingHandler) Parameters setting TextSetting The text setting to create the UI for. settingHandler ISettingHandler The setting handler to use."
  },
  "api/ContentSettings.API.Settings.DebugUI.html": {
    "href": "api/ContentSettings.API.Settings.DebugUI.html",
    "title": "Namespace ContentSettings.API.Settings.DebugUI | ConfigurableWarning Docs",
    "keywords": "Namespace ContentSettings.API.Settings.DebugUI Classes BoolSettingsUI The debug UI for a boolean setting. IntSettingsUI The debug UI for an integer setting. TextSettingsUI The debug UI for a text setting."
  },
  "api/ContentSettings.API.Settings.ICustomSetting.html": {
    "href": "api/ContentSettings.API.Settings.ICustomSetting.html",
    "title": "Interface ICustomSetting | ConfigurableWarning Docs",
    "keywords": "Interface ICustomSetting Namespace ContentSettings.API.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll Interface for all custom settings to implement. [UsedImplicitly] public interface ICustomSetting : IExposedSetting Inherited Members IExposedSetting.GetSettingCategory() IExposedSetting.GetDisplayName()"
  },
  "api/ContentSettings.API.Settings.IntSetting.html": {
    "href": "api/ContentSettings.API.Settings.IntSetting.html",
    "title": "Class IntSetting | ConfigurableWarning Docs",
    "keywords": "Class IntSetting Namespace ContentSettings.API.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll A setting that contains an integer value. public abstract class IntSetting : Setting, IDisposable Inheritance object Setting IntSetting Implements IDisposable Derived IntOption Inherited Members Setting.ApplyValue() Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MaxValue Gets the maximum value of the setting. public int MaxValue { get; } Property Value int MinValue Gets the minimum value of the setting. public int MinValue { get; } Property Value int Value Gets the value of the setting. public int Value { get; set; } Property Value int Methods Clamp(int) Clamps the value to the minimum and maximum value of the setting. [UsedImplicitly] public virtual int Clamp(int value) Parameters value int The value to clamp. Returns int The clamped value. Expose(int) Exposes the value of the setting as a string, for display purposes. [UsedImplicitly] public virtual string Expose(int value) Parameters value int The value to expose. Returns string The exposed value. GetDebugUI(ISettingHandler) Gets the setting UI for the setting. public override SettingUI GetDebugUI(ISettingHandler settingHandler) Parameters settingHandler ISettingHandler The setting handler to get the setting UI for. Returns SettingUI The setting UI for the setting. GetDefaultValue() Gets the value of the setting as an integer. public abstract int GetDefaultValue() Returns int The default value for the setting. GetMinMaxValue() Gets the minimum and maximum value of the setting. protected abstract (int, int) GetMinMaxValue() Returns (int, int) A tuple containing the minimum and maximum value of the setting. GetSettingUICell() Gets the setting UI for the setting. public override GameObject GetSettingUICell() Returns GameObject The setting UI for the setting. Load(ISettingsSaveLoad) Loads the setting using the provided loader. public override void Load(ISettingsSaveLoad loader) Parameters loader ISettingsSaveLoad The loader to load the setting with. Save(ISettingsSaveLoad) Save the setting using the provided loader. public override void Save(ISettingsSaveLoad saver) Parameters saver ISettingsSaveLoad The loader to save the setting with. SetValue(int, ISettingHandler) Sets the value of the setting and saves it. public void SetValue(int newValue, ISettingHandler settingHandler) Parameters newValue int The new value of the setting. settingHandler ISettingHandler The setting handler to save the setting with."
  },
  "api/ContentSettings.API.Settings.IntSettingUI.html": {
    "href": "api/ContentSettings.API.Settings.IntSettingUI.html",
    "title": "Class IntSettingUI | ConfigurableWarning Docs",
    "keywords": "Class IntSettingUI Namespace ContentSettings.API.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll The UI for an integer setting. public class IntSettingUI : SettingInputUICell Inheritance object Object Component Behaviour MonoBehaviour SettingInputUICell IntSettingUI Inherited Members MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Setup(Setting, ISettingHandler) Sets up the setting UI with the provided setting and setting handler. public override void Setup(Setting setting, ISettingHandler settingHandler) Parameters setting Setting The setting to set up the UI with. settingHandler ISettingHandler The setting handler to use for saving the setting."
  },
  "api/ContentSettings.API.Settings.TextSetting.html": {
    "href": "api/ContentSettings.API.Settings.TextSetting.html",
    "title": "Class TextSetting | ConfigurableWarning Docs",
    "keywords": "Class TextSetting Namespace ContentSettings.API.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll A setting that contains a text value. public abstract class TextSetting : Setting, IDisposable Inheritance object Setting TextSetting Implements IDisposable Derived TextOption Inherited Members Setting.ApplyValue() Setting.Dispose() Setting.Update() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Value Gets the value of the setting. public string Value { get; protected set; } Property Value string Methods Expose(string) Expose the setting value, you should apply any formatting here. public virtual string Expose(string value) Parameters value string The value to expose. Returns string The exposed value. GetDebugUI(ISettingHandler) Gets the debug UI for the setting. public override SettingUI GetDebugUI(ISettingHandler settingHandler) Parameters settingHandler ISettingHandler The setting handler to get the debug UI for. Returns SettingUI The debug UI for the setting. GetDefaultValue() Get the default value for the setting. public abstract string GetDefaultValue() Returns string The default value for the setting. GetSettingUICell() Gets the setting UI for the setting. public override GameObject GetSettingUICell() Returns GameObject The setting UI for the setting. Load(ISettingsSaveLoad) Loads the setting using the provided loader. public override void Load(ISettingsSaveLoad loader) Parameters loader ISettingsSaveLoad The loader to load the setting with. Save(ISettingsSaveLoad) Save the setting using the provided loader. public override void Save(ISettingsSaveLoad saver) Parameters saver ISettingsSaveLoad The loader to save the setting with. SetValue(string, ISettingHandler) Sets the value of the setting and saves it. public void SetValue(string newValue, ISettingHandler settingHandler) Parameters newValue string The new value of the setting. settingHandler ISettingHandler The setting handler to save the setting with."
  },
  "api/ContentSettings.API.Settings.TextSettingUI.html": {
    "href": "api/ContentSettings.API.Settings.TextSettingUI.html",
    "title": "Class TextSettingUI | ConfigurableWarning Docs",
    "keywords": "Class TextSettingUI Namespace ContentSettings.API.Settings Assembly RedstoneWizard08.ConfigurableWarning.dll The UI cell for a text setting. public class TextSettingUI : SettingInputUICell Inheritance object Object Component Behaviour MonoBehaviour SettingInputUICell TextSettingUI Inherited Members MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Setup(Setting, ISettingHandler) Sets up the setting UI cell with the provided setting and setting handler. public override void Setup(Setting setting, ISettingHandler settingHandler) Parameters setting Setting The text setting to set up the UI cell with. settingHandler ISettingHandler The setting handler to use for saving the setting."
  },
  "api/ContentSettings.API.Settings.UI.SettingsButton.html": {
    "href": "api/ContentSettings.API.Settings.UI.SettingsButton.html",
    "title": "Class SettingsButton | ConfigurableWarning Docs",
    "keywords": "Class SettingsButton Namespace ContentSettings.API.Settings.UI Assembly RedstoneWizard08.ConfigurableWarning.dll A component representing a button in a settings menu, providing hover and selection states. public class SettingsButton : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour SettingsButton Implements IPointerEnterHandler IPointerExitHandler IEventSystemHandler Derived SettingsTab Inherited Members MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties IsHovered Gets a value indicating whether the tab is hovered over. [UsedImplicitly] public bool IsHovered { get; } Property Value bool IsSelected Gets a value indicating whether the tab is selected. [UsedImplicitly] public bool IsSelected { get; } Property Value bool Name Gets or sets the display name of the button. public string Name { get; set; } Property Value string Methods Awake() Awake is called by Unity when the script instance is being loaded. protected virtual void Awake() Deselect() Deselect the tab. public void Deselect() Remarks See OnDeselected() for the event triggered by this. OnDeselected() Called when the tab is deselected. public virtual void OnDeselected() OnHover() Called when the tab is hovered over. public virtual void OnHover() OnPointerEnter(PointerEventData) Called when the tab is hovered over. public void OnPointerEnter(PointerEventData eventData) Parameters eventData PointerEventData The pointer event data. OnPointerExit(PointerEventData) Called when the tab is no longer hovered over. public void OnPointerExit(PointerEventData eventData) Parameters eventData PointerEventData The pointer event data. OnSelected() Called when the tab is selected. public virtual void OnSelected() OnUnhover() Called when the tab is no longer hovered over. public virtual void OnUnhover() Select() Select the tab. public void Select() Remarks See OnSelected() for the event triggered by this."
  },
  "api/ContentSettings.API.Settings.UI.SettingsNavigation.html": {
    "href": "api/ContentSettings.API.Settings.UI.SettingsNavigation.html",
    "title": "Class SettingsNavigation | ConfigurableWarning Docs",
    "keywords": "Class SettingsNavigation Namespace ContentSettings.API.Settings.UI Assembly RedstoneWizard08.ConfigurableWarning.dll A component containing settings tabs for a settings menu. [UsedImplicitly] public class SettingsNavigation : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SettingsNavigation Inherited Members MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Page Gets a value indicating the current page of settings tabs. [UsedImplicitly] public int Page { get; } Property Value int PageCount Gets a value indicating the total number of pages of settings tabs. [UsedImplicitly] public int PageCount { get; } Property Value int Methods Add(SettingsTab) Add a settings tab to the available tabs. public void Add(SettingsTab tab) Parameters tab SettingsTab The tab to add. Create(string) Create a new settings tab with the specified name. public SettingsTab Create(string tabName) Parameters tabName string The name of the tab. This will be the display name. Returns SettingsTab The created settings tab. Deselect(SettingsTab) De-select a settings tab. public void Deselect(SettingsTab tab) Parameters tab SettingsTab The tab to de-select. NextPage() Show the next page of settings tabs. public void NextPage() OnSelected(SettingsTab) Called when a tab is selected. public virtual void OnSelected(SettingsTab tab) Parameters tab SettingsTab The selected tab. PreviousPage() Show the previous page of settings tabs. public void PreviousPage() Select(SettingsTab) Select a settings tab. public void Select(SettingsTab tab) Parameters tab SettingsTab The tab to select. SelectPage(int) Select a specific page of settings tabs. public void SelectPage(int page) Parameters page int The page to select, indexed from zero."
  },
  "api/ContentSettings.API.Settings.UI.SettingsTab.html": {
    "href": "api/ContentSettings.API.Settings.UI.SettingsTab.html",
    "title": "Class SettingsTab | ConfigurableWarning Docs",
    "keywords": "Class SettingsTab Namespace ContentSettings.API.Settings.UI Assembly RedstoneWizard08.ConfigurableWarning.dll A component representing a tab in a settings menu, which can be selected to show settings belonging to the tab. public class SettingsTab : SettingsButton, IPointerEnterHandler, IPointerExitHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour SettingsButton SettingsTab Implements IPointerEnterHandler IPointerExitHandler IEventSystemHandler Inherited Members SettingsButton.Name SettingsButton.IsHovered SettingsButton.IsSelected SettingsButton.OnPointerEnter(PointerEventData) SettingsButton.OnPointerExit(PointerEventData) SettingsButton.Select() SettingsButton.Deselect() SettingsButton.OnSelected() SettingsButton.OnDeselected() SettingsButton.OnHover() SettingsButton.OnUnhover() MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Awake() Awake is called by Unity when the script instance is being loaded. protected override void Awake() OnPointerClicked() Called when the tab is clicked, selecting the tab. public void OnPointerClicked() Show() Shows the settings for the tab. public void Show() Start() Called by Unity when the script instance has been loaded. protected void Start()"
  },
  "api/ContentSettings.API.Settings.UI.html": {
    "href": "api/ContentSettings.API.Settings.UI.html",
    "title": "Namespace ContentSettings.API.Settings.UI | ConfigurableWarning Docs",
    "keywords": "Namespace ContentSettings.API.Settings.UI Classes SettingsButton A component representing a button in a settings menu, providing hover and selection states. SettingsNavigation A component containing settings tabs for a settings menu. SettingsTab A component representing a tab in a settings menu, which can be selected to show settings belonging to the tab."
  },
  "api/ContentSettings.API.Settings.html": {
    "href": "api/ContentSettings.API.Settings.html",
    "title": "Namespace ContentSettings.API.Settings | ConfigurableWarning Docs",
    "keywords": "Namespace ContentSettings.API.Settings Namespaces ContentSettings.API.Settings.DebugUI ContentSettings.API.Settings.UI Classes BoolSetting A setting that contains a boolean value. BoolSettingUI The UI for a boolean setting. IntSetting A setting that contains an integer value. IntSettingUI The UI for an integer setting. TextSetting A setting that contains a text value. TextSettingUI The UI cell for a text setting. Interfaces ICustomSetting Interface for all custom settings to implement."
  },
  "api/ContentSettings.API.SettingsLoader.html": {
    "href": "api/ContentSettings.API.SettingsLoader.html",
    "title": "Class SettingsLoader | ConfigurableWarning Docs",
    "keywords": "Class SettingsLoader Namespace ContentSettings.API Assembly RedstoneWizard08.ConfigurableWarning.dll Settings loader for custom settings belonging to mods. public static class SettingsLoader Inheritance object SettingsLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Settings Gets all registered settings. [UsedImplicitly] public static IEnumerable<Setting> Settings { get; } Property Value IEnumerable<Setting> Methods GetSetting<T>() Get the instance of the specified setting. public static T? GetSetting<T>() where T : Setting Returns T The instance of the setting. Type Parameters T The type of the setting to get. HasTab(string) Returns whether the settings manager has a tab. [UsedImplicitly] public static bool HasTab(string tab) Parameters tab string The tab to check for. Returns bool True if the settings manager has the tab; otherwise, false. RegisterSetting(string, string?, Setting) Register a custom setting. [UsedImplicitly] public static void RegisterSetting(string tab, string? category, Setting setting) Parameters tab string The tab to register the setting to. category string The category of the setting. setting Setting The setting to register. Remarks This will apply the value of the setting immediately. See ApplyValue(). RegisterSetting(string, Setting) Register a custom setting to the provided tab without a category. [UsedImplicitly] public static void RegisterSetting(string tab, Setting setting) Parameters tab string The tab to register the setting to. setting Setting The setting to register. RegisterSetting(Setting) Register a custom setting to the default MODDED tab and empty category. [UsedImplicitly] public static void RegisterSetting(Setting setting) Parameters setting Setting The setting to register. TryGetTab(string, out Dictionary<string, List<Setting>>) Gets the settings for the specified tab. public static bool TryGetTab(string tab, out Dictionary<string, List<Setting>> settingsByCategory) Parameters tab string The tab to get the settings for. settingsByCategory Dictionary<string, List<Setting>> The settings by category for the tab, if found. Returns bool True if the tab was found; otherwise, false."
  },
  "api/ContentSettings.API.html": {
    "href": "api/ContentSettings.API.html",
    "title": "Namespace ContentSettings.API | ConfigurableWarning Docs",
    "keywords": "Namespace ContentSettings.API Namespaces ContentSettings.API.Attributes ContentSettings.API.Settings Classes SettingsLoader Settings loader for custom settings belonging to mods."
  },
  "api/ContentSettings.CSPluginInfo.html": {
    "href": "api/ContentSettings.CSPluginInfo.html",
    "title": "Class CSPluginInfo | ConfigurableWarning Docs",
    "keywords": "Class CSPluginInfo Namespace ContentSettings Assembly RedstoneWizard08.ConfigurableWarning.dll Contains the plugin information for the Content Settings plugin. public static class CSPluginInfo Inheritance object CSPluginInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PLUGIN_GUID The GUID of the plugin. public const string PLUGIN_GUID = \"CommanderCat101.ContentSettings\" Field Value string PLUGIN_NAME The name of the plugin. public const string PLUGIN_NAME = \"CommanderCat101.ContentSettings\" Field Value string"
  },
  "api/ContentSettings.ContentSettings.html": {
    "href": "api/ContentSettings.ContentSettings.html",
    "title": "Class ContentSettings | ConfigurableWarning Docs",
    "keywords": "Class ContentSettings Namespace ContentSettings Assembly RedstoneWizard08.ConfigurableWarning.dll The main Content Settings plugin class. [ContentWarningPlugin(\"CommanderCat101.ContentSettings\", \"1.15.2\", true)] [BepInPlugin(\"CommanderCat101.ContentSettings\", \"CommanderCat101.ContentSettings\", \"1.15.2\")] public class ContentSettings : BaseUnityPlugin Inheritance object Object Component Behaviour MonoBehaviour BaseUnityPlugin ContentSettings Inherited Members BaseUnityPlugin.Info BaseUnityPlugin.Logger BaseUnityPlugin.Config MonoBehaviour.m_CancellationTokenSource MonoBehaviour.RaiseCancellation() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour) MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour) MonoBehaviour.InvokeDelayed(MonoBehaviour, string, float, float) MonoBehaviour.CancelInvoke(MonoBehaviour, string) MonoBehaviour.IsInvoking(MonoBehaviour, string) MonoBehaviour.IsObjectMonoBehaviour(Object) MonoBehaviour.StartCoroutineManaged(string, object) MonoBehaviour.StartCoroutineManaged2(IEnumerator) MonoBehaviour.StopCoroutineManaged(Coroutine) MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator) MonoBehaviour.GetScriptClassName() MonoBehaviour.OnCancellationTokenCreated() MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponentFastPath(Type, IntPtr) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponentsForListInternal(Type, object) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.m_CachedPtr Object.OffsetOfInstanceIDInCPlusPlusObject Object.objectIsNullMessage Object.cloneDestroyedMessage Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.CompareBaseObjects(Object, Object) Object.EnsureRunningOnMainThread() Object.IsNativeObjectAlive(Object) Object.GetCachedPtr() Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.CheckNullArgument(object, string) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.GetOffsetOfInstanceIDInCPlusPlusObject() Object.CurrentThreadIsMainThread() Object.Internal_CloneSingle(Object) Object.Internal_CloneSingleWithParent(Object, Transform, bool) Object.Internal_InstantiateSingle(Object, Vector3, Quaternion) Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion) Object.ToString(Object) Object.GetName(Object) Object.IsPersistent(Object) Object.SetName(Object, string) Object.DoesObjectWithInstanceIDExist(int) Object.FindObjectFromInstanceID(int) Object.ForceLoadFromInstanceID(int) Object.MarkDirty() Object.Internal_InstantiateSingle_Injected(Object, ref Vector3, ref Quaternion) Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, ref Vector3, ref Quaternion) Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/ContentSettings.html": {
    "href": "api/ContentSettings.html",
    "title": "Namespace ContentSettings | ConfigurableWarning Docs",
    "keywords": "Namespace ContentSettings Namespaces ContentSettings.API Classes CSPluginInfo Contains the plugin information for the Content Settings plugin. ContentSettings The main Content Settings plugin class."
  },
  "guides/quickstart/getting-started.html": {
    "href": "guides/quickstart/getting-started.html",
    "title": "Getting Started | ConfigurableWarning Docs",
    "keywords": "Getting Started With ConfigurableWarning, getting started is easy! Installing After setting up a new BepInEx mod, you can add the package to your project using the following: CLI CSProj dotnet add package RedstoneWizard08.ConfigurableWarning <PackageReference Include=\"RedstoneWizard08.ConfigurableWarning\" Version=\"1.15.2\" IncludeAssets=\"compile\" ExcludeAssets=\"RUNTIME\" /> Your First Option While the legacy ContentSettings API still works, we recommend using the newer API instead. It's more powerful and easier to use! Here's a basic option: [Group(\"MY STUFF\", \"GENERAL\")] public static class MyOptions { [Register] private class MyOptionThing() : IntOption(\"MyOption\", 50, \"My Option!\", 0, 100); } For more info, head to the tutorials section! Accessing it's state To access your option's state, you can use the States manager. To access it, you'll use the same string that you used in your option's name above. In this case, it's \"MyOption\". int? state = States.Ints[\"MyOption\"]; This code retrieves the optional state of the option. You can learn more about that here."
  },
  "guides/quickstart/index.html": {
    "href": "guides/quickstart/index.html",
    "title": "Introduction | ConfigurableWarning Docs",
    "keywords": "Introduction Welcome to our docs! ConfigurableWarning is a mod for Content Warning that allows you to change several aspects of the game that you can't normally change. ConfigurableWarning also has a handy developer API which is documented right here! API Docs: ConfigurableWarning.API Get Started"
  },
  "guides/tutorials/index.html": {
    "href": "guides/tutorials/index.html",
    "title": "Introduction | ConfigurableWarning Docs",
    "keywords": "Tutorials Welcome to the tutorials! You can find tutorials on how to use the API here!"
  },
  "guides/tutorials/options.html": {
    "href": "guides/tutorials/options.html",
    "title": "Options | ConfigurableWarning Docs",
    "keywords": "Options Creating an Option To create an option, you'll need a few things. You'll start with the parent class: [Group(/* Tab = */ \"MY STUFF\", /* Group = */ \"GENERAL\")] public static class MyOptions { } This class is used to group all of your options together. The Group attribute is used to define the tab and category that the options will appear in. Multiple groups in one tab You can also have multiple groups in one tab! This is useful if you have a lot of options. [Tab(\"MY STUFF\")] public static class MyOptions { [Group(\"GENERAL\")] public static class General { } [Group(\"ADVANCED\")] public static class Advanced { } } Then, the option class, which is placed inside your group class: [Register] private class MyOptionThing() : IntOption(Keys.MyOption, 50, \"My Option!\", 0, 100); Note For information about the Keys class, see State. You'll notice a few things here. Let's break it down. The [RegisterOption] comes from Register, and tells ConfigurableWarning to automatically register your option to the game, meaning that you don't have to do that! The inherited class, IntOption, defines this as an IOption<T> with the int type for its value. This constructor takes a few arguments, namely: The option's name - Here it's \"MyOption\". This is used in the state and registry, and the end-user will likely never see it. The default value - Here it's 50. The option's display name - Here it's \"My Option!\". This is what the user will see in the settings menu. The minimum value - Here it's 0. This is the minumum value that the slider will go to. The maximum value - Here it's 100. This is the maximum value that the slider will go to. Note Unfortunately, due to the nature of how Zorro's Settings API works, each option has to be its own class."
  },
  "guides/tutorials/state.html": {
    "href": "guides/tutorials/state.html",
    "title": "State | ConfigurableWarning Docs",
    "keywords": "State State in ConfigurableWarning will always be held in the States class. You can check its documentation for a list of fields and methods. Keys It is recommended to have a class of keys to store common values. Example: public static class Keys { public const string MyOption = \"MyOption\"; } // Then access the state int? state = States.Ints[Keys.MyOption]; If you use the key instead, it eliminates the risk of a typo somewhere in the code. Modifying State The States also allows you to modify state manually! Just call other methods. Example: States.Ints[Keys.MyOption] = ...; // Here, `...` is the value to set it to. Syncing Whenever an option is changed, the state is automatically synced to every client in the game. This is done through @RugbugRedfern's awesome Mycelium Networking system, as to not put any strain on the internal Pun-based system (which also costs the devs money!). In the future, there will be a way to disable the syncing behavior, but for now, it's always on."
  },
  "index.html": {
    "href": "index.html",
    "title": "ConfigurableWarning | ConfigurableWarning Docs",
    "keywords": "ConfigurableWarning Makes the game configurable! This is a quality-of-life mod to help you make the game as hard (or as easy) as you want! This is the continuation of ContentSettings, originally by @CommanderCat and @dhkatz! Huge thanks to them for all their hard work! This mod is fully backwards-compatible with it too, and as it will soon be deprecated, we recommend you switch to this mod instead! Get Started"
  }
}